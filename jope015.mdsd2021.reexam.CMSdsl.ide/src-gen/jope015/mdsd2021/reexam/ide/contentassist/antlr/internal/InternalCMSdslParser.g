/*
 * generated by Xtext 2.22.0
 */
parser grammar InternalCMSdslParser;

options {
	tokenVocab=InternalCMSdslLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package jope015.mdsd2021.reexam.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import jope015.mdsd2021.reexam.services.CMSdslGrammarAccess;

}
@members {
	private CMSdslGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
		tokenNameToValue.put("AmpersandAmpersand", "'&&'");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("EqualsSignEqualsSign", "'=='");
		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("To", "'to'");
		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
		tokenNameToValue.put("And", "'and'");
		tokenNameToValue.put("Has", "'has'");
		tokenNameToValue.put("Int", "'int'");
		tokenNameToValue.put("One", "'one'");
		tokenNameToValue.put("Bool", "'bool'");
		tokenNameToValue.put("Date", "'date'");
		tokenNameToValue.put("Eval", "'eval'");
		tokenNameToValue.put("Hide", "'hide'");
		tokenNameToValue.put("Long", "'long'");
		tokenNameToValue.put("Many", "'many'");
		tokenNameToValue.put("Port", "'port'");
		tokenNameToValue.put("Test", "'test'");
		tokenNameToValue.put("Text", "'text'");
		tokenNameToValue.put("True", "'true'");
		tokenNameToValue.put("Check", "'check'");
		tokenNameToValue.put("Email", "'email'");
		tokenNameToValue.put("Error", "'error'");
		tokenNameToValue.put("False", "'false'");
		tokenNameToValue.put("Field", "'field'");
		tokenNameToValue.put("Float", "'float'");
		tokenNameToValue.put("Entity", "'entity'");
		tokenNameToValue.put("Number", "'number'");
		tokenNameToValue.put("String", "'string'");
		tokenNameToValue.put("Belongs", "'belongs'");
		tokenNameToValue.put("Default", "'default'");
		tokenNameToValue.put("Dialect", "'dialect'");
		tokenNameToValue.put("Library", "'library'");
		tokenNameToValue.put("Project", "'project'");
		tokenNameToValue.put("Success", "'success'");
		tokenNameToValue.put("Warning", "'warning'");
		tokenNameToValue.put("Database", "'database'");
		tokenNameToValue.put("Hostname", "'hostname'");
		tokenNameToValue.put("Password", "'password'");
		tokenNameToValue.put("Textarea", "'textarea'");
		tokenNameToValue.put("Username", "'username'");
		tokenNameToValue.put("InputType", "'inputType'");
		tokenNameToValue.put("Validator", "'validator'");
	}

	public void setGrammarAccess(CMSdslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleProject
entryRuleProject
:
{ before(grammarAccess.getProjectRule()); }
	 ruleProject
{ after(grammarAccess.getProjectRule()); } 
	 EOF 
;

// Rule Project
ruleProject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectAccess().getGroup()); }
		(rule__Project__Group__0)
		{ after(grammarAccess.getProjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryElement
entryRulePrimaryElement
:
{ before(grammarAccess.getPrimaryElementRule()); }
	 rulePrimaryElement
{ after(grammarAccess.getPrimaryElementRule()); } 
	 EOF 
;

// Rule PrimaryElement
rulePrimaryElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryElementAccess().getAlternatives()); }
		(rule__PrimaryElement__Alternatives)
		{ after(grammarAccess.getPrimaryElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDBConfig
entryRuleDBConfig
:
{ before(grammarAccess.getDBConfigRule()); }
	 ruleDBConfig
{ after(grammarAccess.getDBConfigRule()); } 
	 EOF 
;

// Rule DBConfig
ruleDBConfig 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDBConfigAccess().getGroup()); }
		(rule__DBConfig__Group__0)
		{ after(grammarAccess.getDBConfigAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDBDecl
entryRuleDBDecl
:
{ before(grammarAccess.getDBDeclRule()); }
	 ruleDBDecl
{ after(grammarAccess.getDBDeclRule()); } 
	 EOF 
;

// Rule DBDecl
ruleDBDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDBDeclAccess().getAlternatives()); }
		(rule__DBDecl__Alternatives)
		{ after(grammarAccess.getDBDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityDecl
entryRuleEntityDecl
:
{ before(grammarAccess.getEntityDeclRule()); }
	 ruleEntityDecl
{ after(grammarAccess.getEntityDeclRule()); } 
	 EOF 
;

// Rule EntityDecl
ruleEntityDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityDeclAccess().getAlternatives()); }
		(rule__EntityDecl__Alternatives)
		{ after(grammarAccess.getEntityDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValidationCheck
entryRuleValidationCheck
:
{ before(grammarAccess.getValidationCheckRule()); }
	 ruleValidationCheck
{ after(grammarAccess.getValidationCheckRule()); } 
	 EOF 
;

// Rule ValidationCheck
ruleValidationCheck 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValidationCheckAccess().getGroup()); }
		(rule__ValidationCheck__Group__0)
		{ after(grammarAccess.getValidationCheckAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValidatorUse
entryRuleValidatorUse
:
{ before(grammarAccess.getValidatorUseRule()); }
	 ruleValidatorUse
{ after(grammarAccess.getValidatorUseRule()); } 
	 EOF 
;

// Rule ValidatorUse
ruleValidatorUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValidatorUseAccess().getGroup()); }
		(rule__ValidatorUse__Group__0)
		{ after(grammarAccess.getValidatorUseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValidationStatus
entryRuleValidationStatus
:
{ before(grammarAccess.getValidationStatusRule()); }
	 ruleValidationStatus
{ after(grammarAccess.getValidationStatusRule()); } 
	 EOF 
;

// Rule ValidationStatus
ruleValidationStatus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValidationStatusAccess().getAlternatives()); }
		(rule__ValidationStatus__Alternatives)
		{ after(grammarAccess.getValidationStatusAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldProp
entryRuleFieldProp
:
{ before(grammarAccess.getFieldPropRule()); }
	 ruleFieldProp
{ after(grammarAccess.getFieldPropRule()); } 
	 EOF 
;

// Rule FieldProp
ruleFieldProp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldPropAccess().getAlternatives()); }
		(rule__FieldProp__Alternatives)
		{ after(grammarAccess.getFieldPropAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputType
entryRuleInputType
:
{ before(grammarAccess.getInputTypeRule()); }
	 ruleInputType
{ after(grammarAccess.getInputTypeRule()); } 
	 EOF 
;

// Rule InputType
ruleInputType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputTypeAccess().getAlternatives()); }
		(rule__InputType__Alternatives)
		{ after(grammarAccess.getInputTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValidator
entryRuleValidator
:
{ before(grammarAccess.getValidatorRule()); }
	 ruleValidator
{ after(grammarAccess.getValidatorRule()); } 
	 EOF 
;

// Rule Validator
ruleValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValidatorAccess().getGroup()); }
		(rule__Validator__Group__0)
		{ after(grammarAccess.getValidatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParamOrArgUse
entryRuleParamOrArgUse
:
{ before(grammarAccess.getParamOrArgUseRule()); }
	 ruleParamOrArgUse
{ after(grammarAccess.getParamOrArgUseRule()); } 
	 EOF 
;

// Rule ParamOrArgUse
ruleParamOrArgUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamOrArgUseAccess().getRefAssignment()); }
		(rule__ParamOrArgUse__RefAssignment)
		{ after(grammarAccess.getParamOrArgUseAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationship
entryRuleRelationship
:
{ before(grammarAccess.getRelationshipRule()); }
	 ruleRelationship
{ after(grammarAccess.getRelationshipRule()); } 
	 EOF 
;

// Rule Relationship
ruleRelationship 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipAccess().getGroup()); }
		(rule__Relationship__Group__0)
		{ after(grammarAccess.getRelationshipAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationshipType
entryRuleRelationshipType
:
{ before(grammarAccess.getRelationshipTypeRule()); }
	 ruleRelationshipType
{ after(grammarAccess.getRelationshipTypeRule()); } 
	 EOF 
;

// Rule RelationshipType
ruleRelationshipType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipTypeAccess().getAlternatives()); }
		(rule__RelationshipType__Alternatives)
		{ after(grammarAccess.getRelationshipTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
		ruleOr
		{ after(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEval
entryRuleEval
:
{ before(grammarAccess.getEvalRule()); }
	 ruleEval
{ after(grammarAccess.getEvalRule()); } 
	 EOF 
;

// Rule Eval
ruleEval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvalAccess().getGroup()); }
		(rule__Eval__Group__0)
		{ after(grammarAccess.getEvalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusMinus
entryRulePlusMinus
:
{ before(grammarAccess.getPlusMinusRule()); }
	 rulePlusMinus
{ after(grammarAccess.getPlusMinusRule()); } 
	 EOF 
;

// Rule PlusMinus
rulePlusMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusMinusAccess().getGroup()); }
		(rule__PlusMinus__Group__0)
		{ after(grammarAccess.getPlusMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulDiv
entryRuleMulDiv
:
{ before(grammarAccess.getMulDivRule()); }
	 ruleMulDiv
{ after(grammarAccess.getMulDivRule()); } 
	 EOF 
;

// Rule MulDiv
ruleMulDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulDivAccess().getGroup()); }
		(rule__MulDiv__Group__0)
		{ after(grammarAccess.getMulDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryElementAccess().getDBConfigParserRuleCall_0()); }
		ruleDBConfig
		{ after(grammarAccess.getPrimaryElementAccess().getDBConfigParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryElementAccess().getEntityParserRuleCall_1()); }
		ruleEntity
		{ after(grammarAccess.getPrimaryElementAccess().getEntityParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryElementAccess().getValidatorParserRuleCall_2()); }
		ruleValidator
		{ after(grammarAccess.getPrimaryElementAccess().getValidatorParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryElementAccess().getEvalParserRuleCall_3()); }
		ruleEval
		{ after(grammarAccess.getPrimaryElementAccess().getEvalParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getGroup_0()); }
		(rule__DBDecl__Group_0__0)
		{ after(grammarAccess.getDBDeclAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDBDeclAccess().getGroup_1()); }
		(rule__DBDecl__Group_1__0)
		{ after(grammarAccess.getDBDeclAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDBDeclAccess().getGroup_2()); }
		(rule__DBDecl__Group_2__0)
		{ after(grammarAccess.getDBDeclAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getDBDeclAccess().getGroup_3()); }
		(rule__DBDecl__Group_3__0)
		{ after(grammarAccess.getDBDeclAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getDBDeclAccess().getGroup_4()); }
		(rule__DBDecl__Group_4__0)
		{ after(grammarAccess.getDBDeclAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getDBDeclAccess().getGroup_5()); }
		(rule__DBDecl__Group_5__0)
		{ after(grammarAccess.getDBDeclAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityDeclAccess().getFieldParserRuleCall_0()); }
		ruleField
		{ after(grammarAccess.getEntityDeclAccess().getFieldParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntityDeclAccess().getValidationCheckParserRuleCall_1()); }
		ruleValidationCheck
		{ after(grammarAccess.getEntityDeclAccess().getValidationCheckParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidationStatusAccess().getGroup_0()); }
		(rule__ValidationStatus__Group_0__0)
		{ after(grammarAccess.getValidationStatusAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getValidationStatusAccess().getGroup_1()); }
		(rule__ValidationStatus__Group_1__0)
		{ after(grammarAccess.getValidationStatusAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getValidationStatusAccess().getGroup_2()); }
		(rule__ValidationStatus__Group_2__0)
		{ after(grammarAccess.getValidationStatusAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPropAccess().getGroup_0()); }
		(rule__FieldProp__Group_0__0)
		{ after(grammarAccess.getFieldPropAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldPropAccess().getGroup_1()); }
		(rule__FieldProp__Group_1__0)
		{ after(grammarAccess.getFieldPropAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFieldPropAccess().getGroup_2()); }
		(rule__FieldProp__Group_2__0)
		{ after(grammarAccess.getFieldPropAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputTypeAccess().getGroup_0()); }
		(rule__InputType__Group_0__0)
		{ after(grammarAccess.getInputTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getInputTypeAccess().getGroup_1()); }
		(rule__InputType__Group_1__0)
		{ after(grammarAccess.getInputTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getInputTypeAccess().getGroup_2()); }
		(rule__InputType__Group_2__0)
		{ after(grammarAccess.getInputTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getInputTypeAccess().getGroup_3()); }
		(rule__InputType__Group_3__0)
		{ after(grammarAccess.getInputTypeAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getInputTypeAccess().getGroup_4()); }
		(rule__InputType__Group_4__0)
		{ after(grammarAccess.getInputTypeAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getInputTypeAccess().getGroup_5()); }
		(rule__InputType__Group_5__0)
		{ after(grammarAccess.getInputTypeAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_0()); }
		(rule__DataType__Group_0__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_1()); }
		(rule__DataType__Group_1__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_2()); }
		(rule__DataType__Group_2__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_3()); }
		(rule__DataType__Group_3__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_4()); }
		(rule__DataType__Group_4__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_5()); }
		(rule__DataType__Group_5__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipTypeAccess().getGroup_0()); }
		(rule__RelationshipType__Group_0__0)
		{ after(grammarAccess.getRelationshipTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipTypeAccess().getGroup_1()); }
		(rule__RelationshipType__Group_1__0)
		{ after(grammarAccess.getRelationshipTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipTypeAccess().getGroup_2()); }
		(rule__RelationshipType__Group_2__0)
		{ after(grammarAccess.getRelationshipTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationshipTypeAccess().getGroup_3()); }
		(rule__RelationshipType__Group_3__0)
		{ after(grammarAccess.getRelationshipTypeAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
		EqualsSignEqualsSign
		{ after(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		ExclamationMarkEqualsSign
		{ after(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		GreaterThanSignEqualsSign
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
		LessThanSignEqualsSign
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
		GreaterThanSign
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); }
		LessThanSign
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusMinusAccess().getGroup_1_0_0()); }
		(rule__PlusMinus__Group_1_0_0__0)
		{ after(grammarAccess.getPlusMinusAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusMinusAccess().getGroup_1_0_1()); }
		(rule__PlusMinus__Group_1_0_1__0)
		{ after(grammarAccess.getPlusMinusAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulDivAccess().getGroup_1_0_0()); }
		(rule__MulDiv__Group_1_0_0__0)
		{ after(grammarAccess.getMulDivAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulDivAccess().getGroup_1_0_1()); }
		(rule__MulDiv__Group_1_0_1__0)
		{ after(grammarAccess.getMulDivAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_1()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getParamOrArgUseParserRuleCall_3()); }
		ruleParamOrArgUse
		{ after(grammarAccess.getAtomicAccess().getParamOrArgUseParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAlternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueTrueKeyword_2_1_0_0()); }
		True
		{ after(grammarAccess.getAtomicAccess().getValueTrueKeyword_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getValueFalseKeyword_2_1_0_1()); }
		False
		{ after(grammarAccess.getAtomicAccess().getValueFalseKeyword_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__0__Impl
	rule__Project__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
	Project
	{ after(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__1__Impl
	rule__Project__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getNameAssignment_1()); }
	(rule__Project__NameAssignment_1)
	{ after(grammarAccess.getProjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__2__Impl
	rule__Project__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getProjectAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__3__Impl
	rule__Project__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getProjectAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__4__Impl
	rule__Project__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getElementsAssignment_4()); }
	(rule__Project__ElementsAssignment_4)*
	{ after(grammarAccess.getProjectAccess().getElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getProjectAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBConfig__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBConfig__Group__0__Impl
	rule__DBConfig__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBConfigAccess().getDBConfigAction_0()); }
	()
	{ after(grammarAccess.getDBConfigAccess().getDBConfigAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBConfig__Group__1__Impl
	rule__DBConfig__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBConfigAccess().getTypeAssignment_1()); }
	(rule__DBConfig__TypeAssignment_1)
	{ after(grammarAccess.getDBConfigAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBConfig__Group__2__Impl
	rule__DBConfig__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBConfigAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getDBConfigAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBConfig__Group__3__Impl
	rule__DBConfig__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBConfigAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getDBConfigAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBConfig__Group__4__Impl
	rule__DBConfig__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBConfigAccess().getConfigAssignment_4()); }
	(rule__DBConfig__ConfigAssignment_4)*
	{ after(grammarAccess.getDBConfigAccess().getConfigAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBConfig__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBConfigAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getDBConfigAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBDecl__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_0__0__Impl
	rule__DBDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getLibAction_0_0()); }
	()
	{ after(grammarAccess.getDBDeclAccess().getLibAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_0__1__Impl
	rule__DBDecl__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getTypeAssignment_0_1()); }
	(rule__DBDecl__TypeAssignment_0_1)
	{ after(grammarAccess.getDBDeclAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_0__2__Impl
	rule__DBDecl__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getColonKeyword_0_2()); }
	Colon
	{ after(grammarAccess.getDBDeclAccess().getColonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getValueAssignment_0_3()); }
	(rule__DBDecl__ValueAssignment_0_3)
	{ after(grammarAccess.getDBDeclAccess().getValueAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBDecl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_1__0__Impl
	rule__DBDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getHostAction_1_0()); }
	()
	{ after(grammarAccess.getDBDeclAccess().getHostAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_1__1__Impl
	rule__DBDecl__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getTypeAssignment_1_1()); }
	(rule__DBDecl__TypeAssignment_1_1)
	{ after(grammarAccess.getDBDeclAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_1__2__Impl
	rule__DBDecl__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getColonKeyword_1_2()); }
	Colon
	{ after(grammarAccess.getDBDeclAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getValueAssignment_1_3()); }
	(rule__DBDecl__ValueAssignment_1_3)
	{ after(grammarAccess.getDBDeclAccess().getValueAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBDecl__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_2__0__Impl
	rule__DBDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getPortAction_2_0()); }
	()
	{ after(grammarAccess.getDBDeclAccess().getPortAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_2__1__Impl
	rule__DBDecl__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getTypeAssignment_2_1()); }
	(rule__DBDecl__TypeAssignment_2_1)
	{ after(grammarAccess.getDBDeclAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_2__2__Impl
	rule__DBDecl__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getColonKeyword_2_2()); }
	Colon
	{ after(grammarAccess.getDBDeclAccess().getColonKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getValueAssignment_2_3()); }
	(rule__DBDecl__ValueAssignment_2_3)
	{ after(grammarAccess.getDBDeclAccess().getValueAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBDecl__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_3__0__Impl
	rule__DBDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getDialectAction_3_0()); }
	()
	{ after(grammarAccess.getDBDeclAccess().getDialectAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_3__1__Impl
	rule__DBDecl__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getTypeAssignment_3_1()); }
	(rule__DBDecl__TypeAssignment_3_1)
	{ after(grammarAccess.getDBDeclAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_3__2__Impl
	rule__DBDecl__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getColonKeyword_3_2()); }
	Colon
	{ after(grammarAccess.getDBDeclAccess().getColonKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getValueAssignment_3_3()); }
	(rule__DBDecl__ValueAssignment_3_3)
	{ after(grammarAccess.getDBDeclAccess().getValueAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBDecl__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_4__0__Impl
	rule__DBDecl__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getUserAction_4_0()); }
	()
	{ after(grammarAccess.getDBDeclAccess().getUserAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_4__1__Impl
	rule__DBDecl__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getTypeAssignment_4_1()); }
	(rule__DBDecl__TypeAssignment_4_1)
	{ after(grammarAccess.getDBDeclAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_4__2__Impl
	rule__DBDecl__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getColonKeyword_4_2()); }
	Colon
	{ after(grammarAccess.getDBDeclAccess().getColonKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getValueAssignment_4_3()); }
	(rule__DBDecl__ValueAssignment_4_3)
	{ after(grammarAccess.getDBDeclAccess().getValueAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBDecl__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_5__0__Impl
	rule__DBDecl__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getPassAction_5_0()); }
	()
	{ after(grammarAccess.getDBDeclAccess().getPassAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_5__1__Impl
	rule__DBDecl__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getTypeAssignment_5_1()); }
	(rule__DBDecl__TypeAssignment_5_1)
	{ after(grammarAccess.getDBDeclAccess().getTypeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_5__2__Impl
	rule__DBDecl__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getColonKeyword_5_2()); }
	Colon
	{ after(grammarAccess.getDBDeclAccess().getColonKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getValueAssignment_5_3()); }
	(rule__DBDecl__ValueAssignment_5_3)
	{ after(grammarAccess.getDBDeclAccess().getValueAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityAction_0()); }
	()
	{ after(grammarAccess.getEntityAccess().getEntityAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_1()); }
	Entity
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_2()); }
	(rule__Entity__NameAssignment_2)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_3()); }
	(rule__Entity__Group_3__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getColonKeyword_4()); }
	Colon
	{ after(grammarAccess.getEntityAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getBEGINTerminalRuleCall_5()); }
	RULE_BEGIN
	{ after(grammarAccess.getEntityAccess().getBEGINTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__6__Impl
	rule__Entity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getMembersAssignment_6()); }
	(rule__Entity__MembersAssignment_6)*
	{ after(grammarAccess.getEntityAccess().getMembersAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getENDTerminalRuleCall_7()); }
	RULE_END
	{ after(grammarAccess.getEntityAccess().getENDTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3__0__Impl
	rule__Entity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRelationsAssignment_3_0()); }
	(rule__Entity__RelationsAssignment_3_0)
	{ after(grammarAccess.getEntityAccess().getRelationsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_3_1()); }
	(rule__Entity__Group_3_1__0)*
	{ after(grammarAccess.getEntityAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3_1__0__Impl
	rule__Entity__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getAndKeyword_3_1_0()); }
	And
	{ after(grammarAccess.getEntityAccess().getAndKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRelationsAssignment_3_1_1()); }
	(rule__Entity__RelationsAssignment_3_1_1)
	{ after(grammarAccess.getEntityAccess().getRelationsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getDontShowAssignment_0()); }
	(rule__Field__DontShowAssignment_0)?
	{ after(grammarAccess.getFieldAccess().getDontShowAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getFieldKeyword_1()); }
	Field
	{ after(grammarAccess.getFieldAccess().getFieldKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_2()); }
	(rule__Field__NameAssignment_2)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getFieldAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__4__Impl
	rule__Field__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getTypeAssignment_4()); }
	(rule__Field__TypeAssignment_4)
	{ after(grammarAccess.getFieldAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getGroup_5()); }
	(rule__Field__Group_5__0)?
	{ after(grammarAccess.getFieldAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_5__0__Impl
	rule__Field__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getEqualsSignGreaterThanSignKeyword_5_0()); }
	EqualsSignGreaterThanSign
	{ after(grammarAccess.getFieldAccess().getEqualsSignGreaterThanSignKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_5__1__Impl
	rule__Field__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getBEGINTerminalRuleCall_5_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getFieldAccess().getBEGINTerminalRuleCall_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_5__2__Impl
	rule__Field__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getPropertiesAssignment_5_2()); }
	(rule__Field__PropertiesAssignment_5_2)*
	{ after(grammarAccess.getFieldAccess().getPropertiesAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getENDTerminalRuleCall_5_3()); }
	RULE_END
	{ after(grammarAccess.getFieldAccess().getENDTerminalRuleCall_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValidationCheck__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationCheck__Group__0__Impl
	rule__ValidationCheck__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationCheck__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationCheckAccess().getCheckKeyword_0()); }
	Check
	{ after(grammarAccess.getValidationCheckAccess().getCheckKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationCheck__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationCheck__Group__1__Impl
	rule__ValidationCheck__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationCheck__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationCheckAccess().getValidatorAssignment_1()); }
	(rule__ValidationCheck__ValidatorAssignment_1)
	{ after(grammarAccess.getValidationCheckAccess().getValidatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationCheck__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationCheck__Group__2__Impl
	rule__ValidationCheck__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationCheck__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationCheckAccess().getEqualsSignGreaterThanSignKeyword_2()); }
	EqualsSignGreaterThanSign
	{ after(grammarAccess.getValidationCheckAccess().getEqualsSignGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationCheck__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationCheck__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationCheck__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationCheckAccess().getErrrorMsgAssignment_3()); }
	(rule__ValidationCheck__ErrrorMsgAssignment_3)
	{ after(grammarAccess.getValidationCheckAccess().getErrrorMsgAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValidatorUse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidatorUse__Group__0__Impl
	rule__ValidatorUse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorUseAccess().getValidatorUseAction_0()); }
	()
	{ after(grammarAccess.getValidatorUseAccess().getValidatorUseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidatorUse__Group__1__Impl
	rule__ValidatorUse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorUseAccess().getValidatorAssignment_1()); }
	(rule__ValidatorUse__ValidatorAssignment_1)
	{ after(grammarAccess.getValidatorUseAccess().getValidatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidatorUse__Group__2__Impl
	rule__ValidatorUse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorUseAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getValidatorUseAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidatorUse__Group__3__Impl
	rule__ValidatorUse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorUseAccess().getArgsAssignment_3()); }
	(rule__ValidatorUse__ArgsAssignment_3)
	{ after(grammarAccess.getValidatorUseAccess().getArgsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidatorUse__Group__4__Impl
	rule__ValidatorUse__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorUseAccess().getGroup_4()); }
	(rule__ValidatorUse__Group_4__0)*
	{ after(grammarAccess.getValidatorUseAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidatorUse__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorUseAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getValidatorUseAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValidatorUse__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidatorUse__Group_4__0__Impl
	rule__ValidatorUse__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorUseAccess().getCommaKeyword_4_0()); }
	Comma
	{ after(grammarAccess.getValidatorUseAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidatorUse__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorUseAccess().getArgsAssignment_4_1()); }
	(rule__ValidatorUse__ArgsAssignment_4_1)
	{ after(grammarAccess.getValidatorUseAccess().getArgsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValidationStatus__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationStatus__Group_0__0__Impl
	rule__ValidationStatus__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationStatusAccess().getErrAction_0_0()); }
	()
	{ after(grammarAccess.getValidationStatusAccess().getErrAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationStatus__Group_0__1__Impl
	rule__ValidationStatus__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationStatusAccess().getErrorKeyword_0_1()); }
	Error
	{ after(grammarAccess.getValidationStatusAccess().getErrorKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationStatus__Group_0__2__Impl
	rule__ValidationStatus__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationStatusAccess().getColonKeyword_0_2()); }
	Colon
	{ after(grammarAccess.getValidationStatusAccess().getColonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationStatus__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationStatusAccess().getMsgAssignment_0_3()); }
	(rule__ValidationStatus__MsgAssignment_0_3)
	{ after(grammarAccess.getValidationStatusAccess().getMsgAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValidationStatus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationStatus__Group_1__0__Impl
	rule__ValidationStatus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationStatusAccess().getWarnAction_1_0()); }
	()
	{ after(grammarAccess.getValidationStatusAccess().getWarnAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationStatus__Group_1__1__Impl
	rule__ValidationStatus__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationStatusAccess().getWarningKeyword_1_1()); }
	Warning
	{ after(grammarAccess.getValidationStatusAccess().getWarningKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationStatus__Group_1__2__Impl
	rule__ValidationStatus__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationStatusAccess().getColonKeyword_1_2()); }
	Colon
	{ after(grammarAccess.getValidationStatusAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationStatus__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationStatusAccess().getMsgAssignment_1_3()); }
	(rule__ValidationStatus__MsgAssignment_1_3)
	{ after(grammarAccess.getValidationStatusAccess().getMsgAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValidationStatus__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationStatus__Group_2__0__Impl
	rule__ValidationStatus__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationStatusAccess().getSuccAction_2_0()); }
	()
	{ after(grammarAccess.getValidationStatusAccess().getSuccAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationStatus__Group_2__1__Impl
	rule__ValidationStatus__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationStatusAccess().getSuccessKeyword_2_1()); }
	Success
	{ after(grammarAccess.getValidationStatusAccess().getSuccessKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationStatus__Group_2__2__Impl
	rule__ValidationStatus__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationStatusAccess().getColonKeyword_2_2()); }
	Colon
	{ after(grammarAccess.getValidationStatusAccess().getColonKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValidationStatus__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationStatusAccess().getMsgAssignment_2_3()); }
	(rule__ValidationStatus__MsgAssignment_2_3)
	{ after(grammarAccess.getValidationStatusAccess().getMsgAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldProp__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_0__0__Impl
	rule__FieldProp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getDefAction_0_0()); }
	()
	{ after(grammarAccess.getFieldPropAccess().getDefAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_0__1__Impl
	rule__FieldProp__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getTypeAssignment_0_1()); }
	(rule__FieldProp__TypeAssignment_0_1)
	{ after(grammarAccess.getFieldPropAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_0__2__Impl
	rule__FieldProp__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getColonKeyword_0_2()); }
	Colon
	{ after(grammarAccess.getFieldPropAccess().getColonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getValueAssignment_0_3()); }
	(rule__FieldProp__ValueAssignment_0_3)
	{ after(grammarAccess.getFieldPropAccess().getValueAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldProp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_1__0__Impl
	rule__FieldProp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getPropTestAction_1_0()); }
	()
	{ after(grammarAccess.getFieldPropAccess().getPropTestAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_1__1__Impl
	rule__FieldProp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getTypeAssignment_1_1()); }
	(rule__FieldProp__TypeAssignment_1_1)
	{ after(grammarAccess.getFieldPropAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_1__2__Impl
	rule__FieldProp__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getColonKeyword_1_2()); }
	Colon
	{ after(grammarAccess.getFieldPropAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getValueAssignment_1_3()); }
	(rule__FieldProp__ValueAssignment_1_3)
	{ after(grammarAccess.getFieldPropAccess().getValueAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldProp__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_2__0__Impl
	rule__FieldProp__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getInputFieldAction_2_0()); }
	()
	{ after(grammarAccess.getFieldPropAccess().getInputFieldAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_2__1__Impl
	rule__FieldProp__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getTypeAssignment_2_1()); }
	(rule__FieldProp__TypeAssignment_2_1)
	{ after(grammarAccess.getFieldPropAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_2__2__Impl
	rule__FieldProp__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getColonKeyword_2_2()); }
	Colon
	{ after(grammarAccess.getFieldPropAccess().getColonKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getValueAssignment_2_3()); }
	(rule__FieldProp__ValueAssignment_2_3)
	{ after(grammarAccess.getFieldPropAccess().getValueAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputType__Group_0__0__Impl
	rule__InputType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTypeAccess().getInpMailAction_0_0()); }
	()
	{ after(grammarAccess.getInputTypeAccess().getInpMailAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTypeAccess().getTypeAssignment_0_1()); }
	(rule__InputType__TypeAssignment_0_1)
	{ after(grammarAccess.getInputTypeAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputType__Group_1__0__Impl
	rule__InputType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTypeAccess().getInpDateAction_1_0()); }
	()
	{ after(grammarAccess.getInputTypeAccess().getInpDateAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTypeAccess().getTypeAssignment_1_1()); }
	(rule__InputType__TypeAssignment_1_1)
	{ after(grammarAccess.getInputTypeAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputType__Group_2__0__Impl
	rule__InputType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTypeAccess().getInpNumAction_2_0()); }
	()
	{ after(grammarAccess.getInputTypeAccess().getInpNumAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTypeAccess().getTypeAssignment_2_1()); }
	(rule__InputType__TypeAssignment_2_1)
	{ after(grammarAccess.getInputTypeAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputType__Group_3__0__Impl
	rule__InputType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTypeAccess().getInpPassAction_3_0()); }
	()
	{ after(grammarAccess.getInputTypeAccess().getInpPassAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTypeAccess().getTypeAssignment_3_1()); }
	(rule__InputType__TypeAssignment_3_1)
	{ after(grammarAccess.getInputTypeAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputType__Group_4__0__Impl
	rule__InputType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTypeAccess().getInpTextAction_4_0()); }
	()
	{ after(grammarAccess.getInputTypeAccess().getInpTextAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTypeAccess().getTypeAssignment_4_1()); }
	(rule__InputType__TypeAssignment_4_1)
	{ after(grammarAccess.getInputTypeAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputType__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputType__Group_5__0__Impl
	rule__InputType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTypeAccess().getInpTextAreaAction_5_0()); }
	()
	{ after(grammarAccess.getInputTypeAccess().getInpTextAreaAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTypeAccess().getTypeAssignment_5_1()); }
	(rule__InputType__TypeAssignment_5_1)
	{ after(grammarAccess.getInputTypeAccess().getTypeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_0__0__Impl
	rule__DataType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getStrAction_0_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getStrAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_0_1()); }
	(rule__DataType__TypeAssignment_0_1)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_1__0__Impl
	rule__DataType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDtAction_1_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getDtAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_1_1()); }
	(rule__DataType__TypeAssignment_1_1)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__0__Impl
	rule__DataType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getIntegAction_2_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getIntegAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_2_1()); }
	(rule__DataType__TypeAssignment_2_1)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_3__0__Impl
	rule__DataType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getLngAction_3_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getLngAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_3_1()); }
	(rule__DataType__TypeAssignment_3_1)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_4__0__Impl
	rule__DataType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getBoolAction_4_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getBoolAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_4_1()); }
	(rule__DataType__TypeAssignment_4_1)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_5__0__Impl
	rule__DataType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getFltAction_5_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getFltAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_5_1()); }
	(rule__DataType__TypeAssignment_5_1)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validator__Group__0__Impl
	rule__Validator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorAccess().getValidatorKeyword_0()); }
	Validator
	{ after(grammarAccess.getValidatorAccess().getValidatorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validator__Group__1__Impl
	rule__Validator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorAccess().getNameAssignment_1()); }
	(rule__Validator__NameAssignment_1)
	{ after(grammarAccess.getValidatorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validator__Group__2__Impl
	rule__Validator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getValidatorAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validator__Group__3__Impl
	rule__Validator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorAccess().getParamsAssignment_3()); }
	(rule__Validator__ParamsAssignment_3)
	{ after(grammarAccess.getValidatorAccess().getParamsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validator__Group__4__Impl
	rule__Validator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorAccess().getGroup_4()); }
	(rule__Validator__Group_4__0)*
	{ after(grammarAccess.getValidatorAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validator__Group__5__Impl
	rule__Validator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getValidatorAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validator__Group__6__Impl
	rule__Validator__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorAccess().getEqualsSignGreaterThanSignKeyword_6()); }
	EqualsSignGreaterThanSign
	{ after(grammarAccess.getValidatorAccess().getEqualsSignGreaterThanSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validator__Group__7__Impl
	rule__Validator__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorAccess().getBEGINTerminalRuleCall_7()); }
	RULE_BEGIN
	{ after(grammarAccess.getValidatorAccess().getBEGINTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validator__Group__8__Impl
	rule__Validator__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorAccess().getComparisonAssignment_8()); }
	(rule__Validator__ComparisonAssignment_8)
	{ after(grammarAccess.getValidatorAccess().getComparisonAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validator__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorAccess().getENDTerminalRuleCall_9()); }
	RULE_END
	{ after(grammarAccess.getValidatorAccess().getENDTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Validator__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validator__Group_4__0__Impl
	rule__Validator__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorAccess().getCommaKeyword_4_0()); }
	Comma
	{ after(grammarAccess.getValidatorAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validator__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidatorAccess().getParamsAssignment_4_1()); }
	(rule__Validator__ParamsAssignment_4_1)
	{ after(grammarAccess.getValidatorAccess().getParamsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
	(rule__Parameter__TypeAssignment_2)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__0__Impl
	rule__Relationship__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getRelationTypeAssignment_0()); }
	(rule__Relationship__RelationTypeAssignment_0)
	{ after(grammarAccess.getRelationshipAccess().getRelationTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getEntityAssignment_1()); }
	(rule__Relationship__EntityAssignment_1)
	{ after(grammarAccess.getRelationshipAccess().getEntityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_0__0__Impl
	rule__RelationshipType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getBelongsToAction_0_0()); }
	()
	{ after(grammarAccess.getRelationshipTypeAccess().getBelongsToAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_0__1__Impl
	rule__RelationshipType__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getBelongsKeyword_0_1()); }
	Belongs
	{ after(grammarAccess.getRelationshipTypeAccess().getBelongsKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getToKeyword_0_2()); }
	To
	{ after(grammarAccess.getRelationshipTypeAccess().getToKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_1__0__Impl
	rule__RelationshipType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getBelongsToManyAction_1_0()); }
	()
	{ after(grammarAccess.getRelationshipTypeAccess().getBelongsToManyAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_1__1__Impl
	rule__RelationshipType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getBelongsKeyword_1_1()); }
	Belongs
	{ after(grammarAccess.getRelationshipTypeAccess().getBelongsKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_1__2__Impl
	rule__RelationshipType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getToKeyword_1_2()); }
	To
	{ after(grammarAccess.getRelationshipTypeAccess().getToKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getManyKeyword_1_3()); }
	Many
	{ after(grammarAccess.getRelationshipTypeAccess().getManyKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_2__0__Impl
	rule__RelationshipType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getHasOneAction_2_0()); }
	()
	{ after(grammarAccess.getRelationshipTypeAccess().getHasOneAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_2__1__Impl
	rule__RelationshipType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getHasKeyword_2_1()); }
	Has
	{ after(grammarAccess.getRelationshipTypeAccess().getHasKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getOneKeyword_2_2()); }
	One
	{ after(grammarAccess.getRelationshipTypeAccess().getOneKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationshipType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_3__0__Impl
	rule__RelationshipType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getHasManyAction_3_0()); }
	()
	{ after(grammarAccess.getRelationshipTypeAccess().getHasManyAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_3__1__Impl
	rule__RelationshipType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getHasKeyword_3_1()); }
	Has
	{ after(grammarAccess.getRelationshipTypeAccess().getHasKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationshipType__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationshipType__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipTypeAccess().getManyKeyword_3_2()); }
	Many
	{ after(grammarAccess.getRelationshipTypeAccess().getManyKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Eval__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__0__Impl
	rule__Eval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getEvalAction_0()); }
	()
	{ after(grammarAccess.getEvalAccess().getEvalAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__1__Impl
	rule__Eval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getEvalKeyword_1()); }
	Eval
	{ after(grammarAccess.getEvalAccess().getEvalKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getExpressionAssignment_2()); }
	(rule__Eval__ExpressionAssignment_2)
	{ after(grammarAccess.getEvalAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	VerticalLineVerticalLine
	{ after(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
	(rule__Or__RightAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
	AmpersandAmpersand
	{ after(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
	(rule__And__RightAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
	rule__Equality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
	(rule__Equality__OpAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
	(rule__Equality__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getPlusMinusParserRuleCall_0()); }
	rulePlusMinus
	{ after(grammarAccess.getComparisonAccess().getPlusMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
	(rule__Comparison__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
	(rule__Comparison__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group__0__Impl
	rule__PlusMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getMulDivParserRuleCall_0()); }
	ruleMulDiv
	{ after(grammarAccess.getPlusMinusAccess().getMulDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getGroup_1()); }
	(rule__PlusMinus__Group_1__0)*
	{ after(grammarAccess.getPlusMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group_1__0__Impl
	rule__PlusMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getAlternatives_1_0()); }
	(rule__PlusMinus__Alternatives_1_0)
	{ after(grammarAccess.getPlusMinusAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getRightAssignment_1_1()); }
	(rule__PlusMinus__RightAssignment_1_1)
	{ after(grammarAccess.getPlusMinusAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinus__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group_1_0_0__0__Impl
	rule__PlusMinus__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusMinusAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getPlusSignKeyword_1_0_0_1()); }
	PlusSign
	{ after(grammarAccess.getPlusMinusAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinus__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group_1_0_1__0__Impl
	rule__PlusMinus__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusMinusAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
	HyphenMinus
	{ after(grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group__0__Impl
	rule__MulDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMulDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getGroup_1()); }
	(rule__MulDiv__Group_1__0)*
	{ after(grammarAccess.getMulDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group_1__0__Impl
	rule__MulDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getAlternatives_1_0()); }
	(rule__MulDiv__Alternatives_1_0)
	{ after(grammarAccess.getMulDivAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getRightAssignment_1_1()); }
	(rule__MulDiv__RightAssignment_1_1)
	{ after(grammarAccess.getMulDivAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulDiv__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group_1_0_0__0__Impl
	rule__MulDiv__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getMulLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMulDivAccess().getMulLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getAsteriskKeyword_1_0_0_1()); }
	Asterisk
	{ after(grammarAccess.getMulDivAccess().getAsteriskKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulDiv__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group_1_0_1__0__Impl
	rule__MulDiv__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getDivLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getMulDivAccess().getDivLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulDiv__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulDivAccess().getSolidusKeyword_1_0_1_1()); }
	Solidus
	{ after(grammarAccess.getMulDivAccess().getSolidusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	LeftParenthesis
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	RightParenthesis
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getNumAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getNumAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
	(rule__Atomic__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getStrAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getStrAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
	(rule__Atomic__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getBoolAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getBoolAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
	(rule__Atomic__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Project__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProjectAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getElementsPrimaryElementParserRuleCall_4_0()); }
		rulePrimaryElement
		{ after(grammarAccess.getProjectAccess().getElementsPrimaryElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBConfigAccess().getTypeDatabaseKeyword_1_0()); }
		(
			{ before(grammarAccess.getDBConfigAccess().getTypeDatabaseKeyword_1_0()); }
			Database
			{ after(grammarAccess.getDBConfigAccess().getTypeDatabaseKeyword_1_0()); }
		)
		{ after(grammarAccess.getDBConfigAccess().getTypeDatabaseKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__ConfigAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBConfigAccess().getConfigDBDeclParserRuleCall_4_0()); }
		ruleDBDecl
		{ after(grammarAccess.getDBConfigAccess().getConfigDBDeclParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getTypeLibraryKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getDBDeclAccess().getTypeLibraryKeyword_0_1_0()); }
			Library
			{ after(grammarAccess.getDBDeclAccess().getTypeLibraryKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getDBDeclAccess().getTypeLibraryKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__ValueAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getTypeHostnameKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getDBDeclAccess().getTypeHostnameKeyword_1_1_0()); }
			Hostname
			{ after(grammarAccess.getDBDeclAccess().getTypeHostnameKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getDBDeclAccess().getTypeHostnameKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__ValueAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_1_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getTypePortKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getDBDeclAccess().getTypePortKeyword_2_1_0()); }
			Port
			{ after(grammarAccess.getDBDeclAccess().getTypePortKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getDBDeclAccess().getTypePortKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__ValueAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getValueINTTerminalRuleCall_2_3_0()); }
		RULE_INT
		{ after(grammarAccess.getDBDeclAccess().getValueINTTerminalRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getTypeDialectKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getDBDeclAccess().getTypeDialectKeyword_3_1_0()); }
			Dialect
			{ after(grammarAccess.getDBDeclAccess().getTypeDialectKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getDBDeclAccess().getTypeDialectKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__ValueAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_3_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getTypeUsernameKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getDBDeclAccess().getTypeUsernameKeyword_4_1_0()); }
			Username
			{ after(grammarAccess.getDBDeclAccess().getTypeUsernameKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getDBDeclAccess().getTypeUsernameKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__ValueAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_4_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__TypeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getTypePasswordKeyword_5_1_0()); }
		(
			{ before(grammarAccess.getDBDeclAccess().getTypePasswordKeyword_5_1_0()); }
			Password
			{ after(grammarAccess.getDBDeclAccess().getTypePasswordKeyword_5_1_0()); }
		)
		{ after(grammarAccess.getDBDeclAccess().getTypePasswordKeyword_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__ValueAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_5_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__RelationsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getRelationsRelationshipParserRuleCall_3_0_0()); }
		ruleRelationship
		{ after(grammarAccess.getEntityAccess().getRelationsRelationshipParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__RelationsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getRelationsRelationshipParserRuleCall_3_1_1_0()); }
		ruleRelationship
		{ after(grammarAccess.getEntityAccess().getRelationsRelationshipParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__MembersAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getMembersEntityDeclParserRuleCall_6_0()); }
		ruleEntityDecl
		{ after(grammarAccess.getEntityAccess().getMembersEntityDeclParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__DontShowAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getDontShowHideKeyword_0_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getDontShowHideKeyword_0_0()); }
			Hide
			{ after(grammarAccess.getFieldAccess().getDontShowHideKeyword_0_0()); }
		)
		{ after(grammarAccess.getFieldAccess().getDontShowHideKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getTypeDataTypeParserRuleCall_4_0()); }
		ruleDataType
		{ after(grammarAccess.getFieldAccess().getTypeDataTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__PropertiesAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getPropertiesFieldPropParserRuleCall_5_2_0()); }
		ruleFieldProp
		{ after(grammarAccess.getFieldAccess().getPropertiesFieldPropParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationCheck__ValidatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidationCheckAccess().getValidatorValidatorUseParserRuleCall_1_0()); }
		ruleValidatorUse
		{ after(grammarAccess.getValidationCheckAccess().getValidatorValidatorUseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationCheck__ErrrorMsgAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidationCheckAccess().getErrrorMsgSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getValidationCheckAccess().getErrrorMsgSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__ValidatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidatorUseAccess().getValidatorValidatorCrossReference_1_0()); }
		(
			{ before(grammarAccess.getValidatorUseAccess().getValidatorValidatorIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getValidatorUseAccess().getValidatorValidatorIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getValidatorUseAccess().getValidatorValidatorCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__ArgsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidatorUseAccess().getArgsFieldCrossReference_3_0()); }
		(
			{ before(grammarAccess.getValidatorUseAccess().getArgsFieldIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getValidatorUseAccess().getArgsFieldIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getValidatorUseAccess().getArgsFieldCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidatorUse__ArgsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidatorUseAccess().getArgsFieldCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getValidatorUseAccess().getArgsFieldIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getValidatorUseAccess().getArgsFieldIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getValidatorUseAccess().getArgsFieldCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__MsgAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidationStatusAccess().getMsgSTRINGTerminalRuleCall_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getValidationStatusAccess().getMsgSTRINGTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__MsgAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidationStatusAccess().getMsgSTRINGTerminalRuleCall_1_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getValidationStatusAccess().getMsgSTRINGTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidationStatus__MsgAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidationStatusAccess().getMsgSTRINGTerminalRuleCall_2_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getValidationStatusAccess().getMsgSTRINGTerminalRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPropAccess().getTypeDefaultKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getFieldPropAccess().getTypeDefaultKeyword_0_1_0()); }
			Default
			{ after(grammarAccess.getFieldPropAccess().getTypeDefaultKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getFieldPropAccess().getTypeDefaultKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__ValueAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPropAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getFieldPropAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPropAccess().getTypeTestKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getFieldPropAccess().getTypeTestKeyword_1_1_0()); }
			Test
			{ after(grammarAccess.getFieldPropAccess().getTypeTestKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getFieldPropAccess().getTypeTestKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__ValueAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPropAccess().getValueSTRINGTerminalRuleCall_1_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getFieldPropAccess().getValueSTRINGTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPropAccess().getTypeInputTypeKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getFieldPropAccess().getTypeInputTypeKeyword_2_1_0()); }
			InputType
			{ after(grammarAccess.getFieldPropAccess().getTypeInputTypeKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getFieldPropAccess().getTypeInputTypeKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__ValueAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPropAccess().getValueInputTypeParserRuleCall_2_3_0()); }
		ruleInputType
		{ after(grammarAccess.getFieldPropAccess().getValueInputTypeParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputTypeAccess().getTypeEmailKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getInputTypeAccess().getTypeEmailKeyword_0_1_0()); }
			Email
			{ after(grammarAccess.getInputTypeAccess().getTypeEmailKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getInputTypeAccess().getTypeEmailKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputTypeAccess().getTypeDateKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getInputTypeAccess().getTypeDateKeyword_1_1_0()); }
			Date
			{ after(grammarAccess.getInputTypeAccess().getTypeDateKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getInputTypeAccess().getTypeDateKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputTypeAccess().getTypeNumberKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getInputTypeAccess().getTypeNumberKeyword_2_1_0()); }
			Number
			{ after(grammarAccess.getInputTypeAccess().getTypeNumberKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getInputTypeAccess().getTypeNumberKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputTypeAccess().getTypePasswordKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getInputTypeAccess().getTypePasswordKeyword_3_1_0()); }
			Password
			{ after(grammarAccess.getInputTypeAccess().getTypePasswordKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getInputTypeAccess().getTypePasswordKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputTypeAccess().getTypeTextKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getInputTypeAccess().getTypeTextKeyword_4_1_0()); }
			Text
			{ after(grammarAccess.getInputTypeAccess().getTypeTextKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getInputTypeAccess().getTypeTextKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__TypeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputTypeAccess().getTypeTextareaKeyword_5_1_0()); }
		(
			{ before(grammarAccess.getInputTypeAccess().getTypeTextareaKeyword_5_1_0()); }
			Textarea
			{ after(grammarAccess.getInputTypeAccess().getTypeTextareaKeyword_5_1_0()); }
		)
		{ after(grammarAccess.getInputTypeAccess().getTypeTextareaKeyword_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeStringKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeStringKeyword_0_1_0()); }
			String
			{ after(grammarAccess.getDataTypeAccess().getTypeStringKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeStringKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeDateKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeDateKeyword_1_1_0()); }
			Date
			{ after(grammarAccess.getDataTypeAccess().getTypeDateKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeDateKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeIntKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeIntKeyword_2_1_0()); }
			Int
			{ after(grammarAccess.getDataTypeAccess().getTypeIntKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeIntKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeLongKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeLongKeyword_3_1_0()); }
			Long
			{ after(grammarAccess.getDataTypeAccess().getTypeLongKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeLongKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeBoolKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeBoolKeyword_4_1_0()); }
			Bool
			{ after(grammarAccess.getDataTypeAccess().getTypeBoolKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeBoolKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeFloatKeyword_5_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeFloatKeyword_5_1_0()); }
			Float
			{ after(grammarAccess.getDataTypeAccess().getTypeFloatKeyword_5_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeFloatKeyword_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidatorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getValidatorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__ParamsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidatorAccess().getParamsParameterParserRuleCall_3_0()); }
		ruleParameter
		{ after(grammarAccess.getValidatorAccess().getParamsParameterParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__ParamsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidatorAccess().getParamsParameterParserRuleCall_4_1_0()); }
		ruleParameter
		{ after(grammarAccess.getValidatorAccess().getParamsParameterParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validator__ComparisonAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidatorAccess().getComparisonExpressionParserRuleCall_8_0()); }
		ruleExpression
		{ after(grammarAccess.getValidatorAccess().getComparisonExpressionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeDataTypeParserRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getParameterAccess().getTypeDataTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamOrArgUse__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamOrArgUseAccess().getRefParamOrArgCrossReference_0()); }
		(
			{ before(grammarAccess.getParamOrArgUseAccess().getRefParamOrArgIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getParamOrArgUseAccess().getRefParamOrArgIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getParamOrArgUseAccess().getRefParamOrArgCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__RelationTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipAccess().getRelationTypeRelationshipTypeParserRuleCall_0_0()); }
		ruleRelationshipType
		{ after(grammarAccess.getRelationshipAccess().getRelationTypeRelationshipTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__EntityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipAccess().getEntityEntityCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRelationshipAccess().getEntityEntityIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationshipAccess().getEntityEntityIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRelationshipAccess().getEntityEntityCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvalAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getEvalAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); }
		ruleEquality
		{ after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); }
		(rule__Equality__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
		(rule__Comparison__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightPlusMinusParserRuleCall_1_2_0()); }
		rulePlusMinus
		{ after(grammarAccess.getComparisonAccess().getRightPlusMinusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusMinusAccess().getRightMulDivParserRuleCall_1_1_0()); }
		ruleMulDiv
		{ after(grammarAccess.getPlusMinusAccess().getRightMulDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulDivAccess().getRightPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getMulDivAccess().getRightPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAlternatives_2_1_0()); }
		(rule__Atomic__ValueAlternatives_2_1_0)
		{ after(grammarAccess.getAtomicAccess().getValueAlternatives_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
