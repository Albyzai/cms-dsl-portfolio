/*
 * generated by Xtext 2.22.0
 */
parser grammar InternalCMSdslParser;

options {
	tokenVocab=InternalCMSdslLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package jope015.mdsd2021.reexam.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import jope015.mdsd2021.reexam.services.CMSdslGrammarAccess;

}
@members {
	private CMSdslGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Ui", "'ui'");
		tokenNameToValue.put("Int", "'int'");
		tokenNameToValue.put("Bool", "'bool'");
		tokenNameToValue.put("Date", "'date'");
		tokenNameToValue.put("Long", "'long'");
		tokenNameToValue.put("Port", "'port'");
		tokenNameToValue.put("Test", "'test'");
		tokenNameToValue.put("Float", "'float'");
		tokenNameToValue.put("Entity", "'entity'");
		tokenNameToValue.put("String", "'string'");
		tokenNameToValue.put("Default", "'default'");
		tokenNameToValue.put("Dialect", "'dialect'");
		tokenNameToValue.put("Library", "'library'");
		tokenNameToValue.put("Project", "'project'");
		tokenNameToValue.put("Service", "'service'");
		tokenNameToValue.put("Database", "'database'");
		tokenNameToValue.put("Hostname", "'hostname'");
		tokenNameToValue.put("Password", "'password'");
		tokenNameToValue.put("Username", "'username'");
	}

	public void setGrammarAccess(CMSdslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleProject
entryRuleProject
:
{ before(grammarAccess.getProjectRule()); }
	 ruleProject
{ after(grammarAccess.getProjectRule()); } 
	 EOF 
;

// Rule Project
ruleProject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectAccess().getGroup()); }
		(rule__Project__Group__0)
		{ after(grammarAccess.getProjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryElement
entryRulePrimaryElement
:
{ before(grammarAccess.getPrimaryElementRule()); }
	 rulePrimaryElement
{ after(grammarAccess.getPrimaryElementRule()); } 
	 EOF 
;

// Rule PrimaryElement
rulePrimaryElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryElementAccess().getAlternatives()); }
		(rule__PrimaryElement__Alternatives)
		{ after(grammarAccess.getPrimaryElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDBConfig
entryRuleDBConfig
:
{ before(grammarAccess.getDBConfigRule()); }
	 ruleDBConfig
{ after(grammarAccess.getDBConfigRule()); } 
	 EOF 
;

// Rule DBConfig
ruleDBConfig 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDBConfigAccess().getGroup()); }
		(rule__DBConfig__Group__0)
		{ after(grammarAccess.getDBConfigAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDBDecl
entryRuleDBDecl
:
{ before(grammarAccess.getDBDeclRule()); }
	 ruleDBDecl
{ after(grammarAccess.getDBDeclRule()); } 
	 EOF 
;

// Rule DBDecl
ruleDBDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDBDeclAccess().getAlternatives()); }
		(rule__DBDecl__Alternatives)
		{ after(grammarAccess.getDBDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityModel
entryRuleEntityModel
:
{ before(grammarAccess.getEntityModelRule()); }
	 ruleEntityModel
{ after(grammarAccess.getEntityModelRule()); } 
	 EOF 
;

// Rule EntityModel
ruleEntityModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityModelAccess().getGroup()); }
		(rule__EntityModel__Group__0)
		{ after(grammarAccess.getEntityModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityService
entryRuleEntityService
:
{ before(grammarAccess.getEntityServiceRule()); }
	 ruleEntityService
{ after(grammarAccess.getEntityServiceRule()); } 
	 EOF 
;

// Rule EntityService
ruleEntityService 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityServiceAccess().getGroup()); }
		(rule__EntityService__Group__0)
		{ after(grammarAccess.getEntityServiceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityUI
entryRuleEntityUI
:
{ before(grammarAccess.getEntityUIRule()); }
	 ruleEntityUI
{ after(grammarAccess.getEntityUIRule()); } 
	 EOF 
;

// Rule EntityUI
ruleEntityUI 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityUIAccess().getUiKeyword()); }
		Ui
		{ after(grammarAccess.getEntityUIAccess().getUiKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldProp
entryRuleFieldProp
:
{ before(grammarAccess.getFieldPropRule()); }
	 ruleFieldProp
{ after(grammarAccess.getFieldPropRule()); } 
	 EOF 
;

// Rule FieldProp
ruleFieldProp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldPropAccess().getAlternatives()); }
		(rule__FieldProp__Alternatives)
		{ after(grammarAccess.getFieldPropAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryElementAccess().getDBConfigParserRuleCall_0()); }
		ruleDBConfig
		{ after(grammarAccess.getPrimaryElementAccess().getDBConfigParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryElementAccess().getEntityParserRuleCall_1()); }
		ruleEntity
		{ after(grammarAccess.getPrimaryElementAccess().getEntityParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getGroup_0()); }
		(rule__DBDecl__Group_0__0)
		{ after(grammarAccess.getDBDeclAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDBDeclAccess().getGroup_1()); }
		(rule__DBDecl__Group_1__0)
		{ after(grammarAccess.getDBDeclAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDBDeclAccess().getGroup_2()); }
		(rule__DBDecl__Group_2__0)
		{ after(grammarAccess.getDBDeclAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getDBDeclAccess().getGroup_3()); }
		(rule__DBDecl__Group_3__0)
		{ after(grammarAccess.getDBDeclAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getDBDeclAccess().getGroup_4()); }
		(rule__DBDecl__Group_4__0)
		{ after(grammarAccess.getDBDeclAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getDBDeclAccess().getGroup_5()); }
		(rule__DBDecl__Group_5__0)
		{ after(grammarAccess.getDBDeclAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPropAccess().getGroup_0()); }
		(rule__FieldProp__Group_0__0)
		{ after(grammarAccess.getFieldPropAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldPropAccess().getGroup_1()); }
		(rule__FieldProp__Group_1__0)
		{ after(grammarAccess.getFieldPropAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_0()); }
		(rule__DataType__Group_0__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_1()); }
		(rule__DataType__Group_1__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_2()); }
		(rule__DataType__Group_2__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_3()); }
		(rule__DataType__Group_3__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_4()); }
		(rule__DataType__Group_4__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_5()); }
		(rule__DataType__Group_5__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__0__Impl
	rule__Project__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
	Project
	{ after(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__1__Impl
	rule__Project__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getNameAssignment_1()); }
	(rule__Project__NameAssignment_1)
	{ after(grammarAccess.getProjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__2__Impl
	rule__Project__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getProjectAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__3__Impl
	rule__Project__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getProjectAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__4__Impl
	rule__Project__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getElementsAssignment_4()); }
	(rule__Project__ElementsAssignment_4)*
	{ after(grammarAccess.getProjectAccess().getElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getProjectAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBConfig__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBConfig__Group__0__Impl
	rule__DBConfig__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBConfigAccess().getDBConfigAction_0()); }
	()
	{ after(grammarAccess.getDBConfigAccess().getDBConfigAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBConfig__Group__1__Impl
	rule__DBConfig__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBConfigAccess().getTypeAssignment_1()); }
	(rule__DBConfig__TypeAssignment_1)
	{ after(grammarAccess.getDBConfigAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBConfig__Group__2__Impl
	rule__DBConfig__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBConfigAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getDBConfigAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBConfig__Group__3__Impl
	rule__DBConfig__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBConfigAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getDBConfigAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBConfig__Group__4__Impl
	rule__DBConfig__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBConfigAccess().getConfigAssignment_4()); }
	(rule__DBConfig__ConfigAssignment_4)*
	{ after(grammarAccess.getDBConfigAccess().getConfigAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBConfig__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBConfigAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getDBConfigAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBDecl__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_0__0__Impl
	rule__DBDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getLibAction_0_0()); }
	()
	{ after(grammarAccess.getDBDeclAccess().getLibAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_0__1__Impl
	rule__DBDecl__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getTypeAssignment_0_1()); }
	(rule__DBDecl__TypeAssignment_0_1)
	{ after(grammarAccess.getDBDeclAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_0__2__Impl
	rule__DBDecl__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getColonKeyword_0_2()); }
	Colon
	{ after(grammarAccess.getDBDeclAccess().getColonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getValueAssignment_0_3()); }
	(rule__DBDecl__ValueAssignment_0_3)
	{ after(grammarAccess.getDBDeclAccess().getValueAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBDecl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_1__0__Impl
	rule__DBDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getHostAction_1_0()); }
	()
	{ after(grammarAccess.getDBDeclAccess().getHostAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_1__1__Impl
	rule__DBDecl__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getTypeAssignment_1_1()); }
	(rule__DBDecl__TypeAssignment_1_1)
	{ after(grammarAccess.getDBDeclAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_1__2__Impl
	rule__DBDecl__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getColonKeyword_1_2()); }
	Colon
	{ after(grammarAccess.getDBDeclAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getValueAssignment_1_3()); }
	(rule__DBDecl__ValueAssignment_1_3)
	{ after(grammarAccess.getDBDeclAccess().getValueAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBDecl__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_2__0__Impl
	rule__DBDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getPortAction_2_0()); }
	()
	{ after(grammarAccess.getDBDeclAccess().getPortAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_2__1__Impl
	rule__DBDecl__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getTypeAssignment_2_1()); }
	(rule__DBDecl__TypeAssignment_2_1)
	{ after(grammarAccess.getDBDeclAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_2__2__Impl
	rule__DBDecl__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getColonKeyword_2_2()); }
	Colon
	{ after(grammarAccess.getDBDeclAccess().getColonKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getValueAssignment_2_3()); }
	(rule__DBDecl__ValueAssignment_2_3)
	{ after(grammarAccess.getDBDeclAccess().getValueAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBDecl__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_3__0__Impl
	rule__DBDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getDialectAction_3_0()); }
	()
	{ after(grammarAccess.getDBDeclAccess().getDialectAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_3__1__Impl
	rule__DBDecl__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getTypeAssignment_3_1()); }
	(rule__DBDecl__TypeAssignment_3_1)
	{ after(grammarAccess.getDBDeclAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_3__2__Impl
	rule__DBDecl__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getColonKeyword_3_2()); }
	Colon
	{ after(grammarAccess.getDBDeclAccess().getColonKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getValueAssignment_3_3()); }
	(rule__DBDecl__ValueAssignment_3_3)
	{ after(grammarAccess.getDBDeclAccess().getValueAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBDecl__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_4__0__Impl
	rule__DBDecl__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getUserAction_4_0()); }
	()
	{ after(grammarAccess.getDBDeclAccess().getUserAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_4__1__Impl
	rule__DBDecl__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getTypeAssignment_4_1()); }
	(rule__DBDecl__TypeAssignment_4_1)
	{ after(grammarAccess.getDBDeclAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_4__2__Impl
	rule__DBDecl__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getColonKeyword_4_2()); }
	Colon
	{ after(grammarAccess.getDBDeclAccess().getColonKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getValueAssignment_4_3()); }
	(rule__DBDecl__ValueAssignment_4_3)
	{ after(grammarAccess.getDBDeclAccess().getValueAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DBDecl__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_5__0__Impl
	rule__DBDecl__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getPassAction_5_0()); }
	()
	{ after(grammarAccess.getDBDeclAccess().getPassAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_5__1__Impl
	rule__DBDecl__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getTypeAssignment_5_1()); }
	(rule__DBDecl__TypeAssignment_5_1)
	{ after(grammarAccess.getDBDeclAccess().getTypeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_5__2__Impl
	rule__DBDecl__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getColonKeyword_5_2()); }
	Colon
	{ after(grammarAccess.getDBDeclAccess().getColonKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DBDecl__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDBDeclAccess().getValueAssignment_5_3()); }
	(rule__DBDecl__ValueAssignment_5_3)
	{ after(grammarAccess.getDBDeclAccess().getValueAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityAction_0()); }
	()
	{ after(grammarAccess.getEntityAccess().getEntityAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_1()); }
	Entity
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_2()); }
	(rule__Entity__NameAssignment_2)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getEntityAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getEntityAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getModelAssignment_5()); }
	(rule__Entity__ModelAssignment_5)
	{ after(grammarAccess.getEntityAccess().getModelAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__6__Impl
	rule__Entity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getServiceAssignment_6()); }
	(rule__Entity__ServiceAssignment_6)?
	{ after(grammarAccess.getEntityAccess().getServiceAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__7__Impl
	rule__Entity__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getUiAssignment_7()); }
	(rule__Entity__UiAssignment_7)?
	{ after(grammarAccess.getEntityAccess().getUiAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getENDTerminalRuleCall_8()); }
	RULE_END
	{ after(grammarAccess.getEntityAccess().getENDTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityModel__Group__0__Impl
	rule__EntityModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityModelAccess().getEntityModelAction_0()); }
	()
	{ after(grammarAccess.getEntityModelAccess().getEntityModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityModelAccess().getFieldsAssignment_1()); }
	(rule__EntityModel__FieldsAssignment_1)*
	{ after(grammarAccess.getEntityModelAccess().getFieldsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityService__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityService__Group__0__Impl
	rule__EntityService__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityService__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityServiceAccess().getEntityServiceAction_0()); }
	()
	{ after(grammarAccess.getEntityServiceAccess().getEntityServiceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityService__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityService__Group__1__Impl
	rule__EntityService__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityService__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityServiceAccess().getServiceKeyword_1()); }
	Service
	{ after(grammarAccess.getEntityServiceAccess().getServiceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityService__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityService__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityService__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityServiceAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getEntityServiceAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getTypeAssignment_0()); }
	(rule__Field__TypeAssignment_0)
	{ after(grammarAccess.getFieldAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_1()); }
	(rule__Field__NameAssignment_1)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getFieldAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getFieldAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__4__Impl
	rule__Field__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getPropertiesAssignment_4()); }
	(rule__Field__PropertiesAssignment_4)*
	{ after(grammarAccess.getFieldAccess().getPropertiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getFieldAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldProp__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_0__0__Impl
	rule__FieldProp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getDefAction_0_0()); }
	()
	{ after(grammarAccess.getFieldPropAccess().getDefAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_0__1__Impl
	rule__FieldProp__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getTypeAssignment_0_1()); }
	(rule__FieldProp__TypeAssignment_0_1)
	{ after(grammarAccess.getFieldPropAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_0__2__Impl
	rule__FieldProp__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getColonKeyword_0_2()); }
	Colon
	{ after(grammarAccess.getFieldPropAccess().getColonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getValueAssignment_0_3()); }
	(rule__FieldProp__ValueAssignment_0_3)
	{ after(grammarAccess.getFieldPropAccess().getValueAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldProp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_1__0__Impl
	rule__FieldProp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getPropTestAction_1_0()); }
	()
	{ after(grammarAccess.getFieldPropAccess().getPropTestAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_1__1__Impl
	rule__FieldProp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getTypeAssignment_1_1()); }
	(rule__FieldProp__TypeAssignment_1_1)
	{ after(grammarAccess.getFieldPropAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_1__2__Impl
	rule__FieldProp__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getColonKeyword_1_2()); }
	Colon
	{ after(grammarAccess.getFieldPropAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldProp__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPropAccess().getValueAssignment_1_3()); }
	(rule__FieldProp__ValueAssignment_1_3)
	{ after(grammarAccess.getFieldPropAccess().getValueAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_0__0__Impl
	rule__DataType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getStrAction_0_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getStrAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_0_1()); }
	(rule__DataType__TypeAssignment_0_1)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_1__0__Impl
	rule__DataType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDtAction_1_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getDtAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_1_1()); }
	(rule__DataType__TypeAssignment_1_1)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__0__Impl
	rule__DataType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getIntegAction_2_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getIntegAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_2_1()); }
	(rule__DataType__TypeAssignment_2_1)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_3__0__Impl
	rule__DataType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getLngAction_3_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getLngAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_3_1()); }
	(rule__DataType__TypeAssignment_3_1)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_4__0__Impl
	rule__DataType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getBoolAction_4_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getBoolAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_4_1()); }
	(rule__DataType__TypeAssignment_4_1)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_5__0__Impl
	rule__DataType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getFltAction_5_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getFltAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_5_1()); }
	(rule__DataType__TypeAssignment_5_1)
	{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Project__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProjectAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getElementsPrimaryElementParserRuleCall_4_0()); }
		rulePrimaryElement
		{ after(grammarAccess.getProjectAccess().getElementsPrimaryElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBConfigAccess().getTypeDatabaseKeyword_1_0()); }
		(
			{ before(grammarAccess.getDBConfigAccess().getTypeDatabaseKeyword_1_0()); }
			Database
			{ after(grammarAccess.getDBConfigAccess().getTypeDatabaseKeyword_1_0()); }
		)
		{ after(grammarAccess.getDBConfigAccess().getTypeDatabaseKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBConfig__ConfigAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBConfigAccess().getConfigDBDeclParserRuleCall_4_0()); }
		ruleDBDecl
		{ after(grammarAccess.getDBConfigAccess().getConfigDBDeclParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getTypeLibraryKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getDBDeclAccess().getTypeLibraryKeyword_0_1_0()); }
			Library
			{ after(grammarAccess.getDBDeclAccess().getTypeLibraryKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getDBDeclAccess().getTypeLibraryKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__ValueAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getTypeHostnameKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getDBDeclAccess().getTypeHostnameKeyword_1_1_0()); }
			Hostname
			{ after(grammarAccess.getDBDeclAccess().getTypeHostnameKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getDBDeclAccess().getTypeHostnameKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__ValueAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_1_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getTypePortKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getDBDeclAccess().getTypePortKeyword_2_1_0()); }
			Port
			{ after(grammarAccess.getDBDeclAccess().getTypePortKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getDBDeclAccess().getTypePortKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__ValueAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getValueINTTerminalRuleCall_2_3_0()); }
		RULE_INT
		{ after(grammarAccess.getDBDeclAccess().getValueINTTerminalRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getTypeDialectKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getDBDeclAccess().getTypeDialectKeyword_3_1_0()); }
			Dialect
			{ after(grammarAccess.getDBDeclAccess().getTypeDialectKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getDBDeclAccess().getTypeDialectKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__ValueAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_3_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getTypeUsernameKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getDBDeclAccess().getTypeUsernameKeyword_4_1_0()); }
			Username
			{ after(grammarAccess.getDBDeclAccess().getTypeUsernameKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getDBDeclAccess().getTypeUsernameKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__ValueAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_4_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__TypeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getTypePasswordKeyword_5_1_0()); }
		(
			{ before(grammarAccess.getDBDeclAccess().getTypePasswordKeyword_5_1_0()); }
			Password
			{ after(grammarAccess.getDBDeclAccess().getTypePasswordKeyword_5_1_0()); }
		)
		{ after(grammarAccess.getDBDeclAccess().getTypePasswordKeyword_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DBDecl__ValueAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_5_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDBDeclAccess().getValueSTRINGTerminalRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ModelAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getModelEntityModelParserRuleCall_5_0()); }
		ruleEntityModel
		{ after(grammarAccess.getEntityAccess().getModelEntityModelParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ServiceAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getServiceEntityServiceParserRuleCall_6_0()); }
		ruleEntityService
		{ after(grammarAccess.getEntityAccess().getServiceEntityServiceParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__UiAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getUiEntityUIParserRuleCall_7_0()); }
		ruleEntityUI
		{ after(grammarAccess.getEntityAccess().getUiEntityUIParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityModel__FieldsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityModelAccess().getFieldsFieldParserRuleCall_1_0()); }
		ruleField
		{ after(grammarAccess.getEntityModelAccess().getFieldsFieldParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getTypeDataTypeParserRuleCall_0_0()); }
		ruleDataType
		{ after(grammarAccess.getFieldAccess().getTypeDataTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__PropertiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getPropertiesFieldPropParserRuleCall_4_0()); }
		ruleFieldProp
		{ after(grammarAccess.getFieldAccess().getPropertiesFieldPropParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPropAccess().getTypeDefaultKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getFieldPropAccess().getTypeDefaultKeyword_0_1_0()); }
			Default
			{ after(grammarAccess.getFieldPropAccess().getTypeDefaultKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getFieldPropAccess().getTypeDefaultKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__ValueAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPropAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getFieldPropAccess().getValueSTRINGTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPropAccess().getTypeTestKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getFieldPropAccess().getTypeTestKeyword_1_1_0()); }
			Test
			{ after(grammarAccess.getFieldPropAccess().getTypeTestKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getFieldPropAccess().getTypeTestKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldProp__ValueAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPropAccess().getValueSTRINGTerminalRuleCall_1_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getFieldPropAccess().getValueSTRINGTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeStringKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeStringKeyword_0_1_0()); }
			String
			{ after(grammarAccess.getDataTypeAccess().getTypeStringKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeStringKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeDateKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeDateKeyword_1_1_0()); }
			Date
			{ after(grammarAccess.getDataTypeAccess().getTypeDateKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeDateKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeIntKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeIntKeyword_2_1_0()); }
			Int
			{ after(grammarAccess.getDataTypeAccess().getTypeIntKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeIntKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeLongKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeLongKeyword_3_1_0()); }
			Long
			{ after(grammarAccess.getDataTypeAccess().getTypeLongKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeLongKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeBoolKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeBoolKeyword_4_1_0()); }
			Bool
			{ after(grammarAccess.getDataTypeAccess().getTypeBoolKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeBoolKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTypeFloatKeyword_5_1_0()); }
		(
			{ before(grammarAccess.getDataTypeAccess().getTypeFloatKeyword_5_1_0()); }
			Float
			{ after(grammarAccess.getDataTypeAccess().getTypeFloatKeyword_5_1_0()); }
		)
		{ after(grammarAccess.getDataTypeAccess().getTypeFloatKeyword_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
