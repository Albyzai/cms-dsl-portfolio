/**
 * generated by Xtext 2.22.0
 */
package jope015.mdsd2021.reexam.cMSdsl.impl;

import jope015.mdsd2021.reexam.cMSdsl.CMSdslPackage;
import jope015.mdsd2021.reexam.cMSdsl.Entity;
import jope015.mdsd2021.reexam.cMSdsl.EntityModel;
import jope015.mdsd2021.reexam.cMSdsl.EntityService;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entity</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link jope015.mdsd2021.reexam.cMSdsl.impl.EntityImpl#getName <em>Name</em>}</li>
 *   <li>{@link jope015.mdsd2021.reexam.cMSdsl.impl.EntityImpl#getModel <em>Model</em>}</li>
 *   <li>{@link jope015.mdsd2021.reexam.cMSdsl.impl.EntityImpl#getService <em>Service</em>}</li>
 *   <li>{@link jope015.mdsd2021.reexam.cMSdsl.impl.EntityImpl#getUi <em>Ui</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EntityImpl extends PrimaryElementImpl implements Entity
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getModel() <em>Model</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModel()
   * @generated
   * @ordered
   */
  protected EntityModel model;

  /**
   * The cached value of the '{@link #getService() <em>Service</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getService()
   * @generated
   * @ordered
   */
  protected EntityService service;

  /**
   * The default value of the '{@link #getUi() <em>Ui</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUi()
   * @generated
   * @ordered
   */
  protected static final String UI_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUi() <em>Ui</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUi()
   * @generated
   * @ordered
   */
  protected String ui = UI_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntityImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CMSdslPackage.Literals.ENTITY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CMSdslPackage.ENTITY__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityModel getModel()
  {
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetModel(EntityModel newModel, NotificationChain msgs)
  {
    EntityModel oldModel = model;
    model = newModel;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CMSdslPackage.ENTITY__MODEL, oldModel, newModel);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setModel(EntityModel newModel)
  {
    if (newModel != model)
    {
      NotificationChain msgs = null;
      if (model != null)
        msgs = ((InternalEObject)model).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CMSdslPackage.ENTITY__MODEL, null, msgs);
      if (newModel != null)
        msgs = ((InternalEObject)newModel).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CMSdslPackage.ENTITY__MODEL, null, msgs);
      msgs = basicSetModel(newModel, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CMSdslPackage.ENTITY__MODEL, newModel, newModel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityService getService()
  {
    return service;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetService(EntityService newService, NotificationChain msgs)
  {
    EntityService oldService = service;
    service = newService;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CMSdslPackage.ENTITY__SERVICE, oldService, newService);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setService(EntityService newService)
  {
    if (newService != service)
    {
      NotificationChain msgs = null;
      if (service != null)
        msgs = ((InternalEObject)service).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CMSdslPackage.ENTITY__SERVICE, null, msgs);
      if (newService != null)
        msgs = ((InternalEObject)newService).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CMSdslPackage.ENTITY__SERVICE, null, msgs);
      msgs = basicSetService(newService, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CMSdslPackage.ENTITY__SERVICE, newService, newService));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUi()
  {
    return ui;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUi(String newUi)
  {
    String oldUi = ui;
    ui = newUi;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CMSdslPackage.ENTITY__UI, oldUi, ui));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CMSdslPackage.ENTITY__MODEL:
        return basicSetModel(null, msgs);
      case CMSdslPackage.ENTITY__SERVICE:
        return basicSetService(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CMSdslPackage.ENTITY__NAME:
        return getName();
      case CMSdslPackage.ENTITY__MODEL:
        return getModel();
      case CMSdslPackage.ENTITY__SERVICE:
        return getService();
      case CMSdslPackage.ENTITY__UI:
        return getUi();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CMSdslPackage.ENTITY__NAME:
        setName((String)newValue);
        return;
      case CMSdslPackage.ENTITY__MODEL:
        setModel((EntityModel)newValue);
        return;
      case CMSdslPackage.ENTITY__SERVICE:
        setService((EntityService)newValue);
        return;
      case CMSdslPackage.ENTITY__UI:
        setUi((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CMSdslPackage.ENTITY__NAME:
        setName(NAME_EDEFAULT);
        return;
      case CMSdslPackage.ENTITY__MODEL:
        setModel((EntityModel)null);
        return;
      case CMSdslPackage.ENTITY__SERVICE:
        setService((EntityService)null);
        return;
      case CMSdslPackage.ENTITY__UI:
        setUi(UI_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CMSdslPackage.ENTITY__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case CMSdslPackage.ENTITY__MODEL:
        return model != null;
      case CMSdslPackage.ENTITY__SERVICE:
        return service != null;
      case CMSdslPackage.ENTITY__UI:
        return UI_EDEFAULT == null ? ui != null : !UI_EDEFAULT.equals(ui);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", ui: ");
    result.append(ui);
    result.append(')');
    return result.toString();
  }

} //EntityImpl
