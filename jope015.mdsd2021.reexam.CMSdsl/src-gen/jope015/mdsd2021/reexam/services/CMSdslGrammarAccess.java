/*
 * generated by Xtext 2.22.0
 */
package jope015.mdsd2021.reexam.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class CMSdslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.Project");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementsPrimaryElementParserRuleCall_4_0 = (RuleCall)cElementsAssignment_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//Project:
		//	'project' name=ID ':' BEGIN
		//	elements+=PrimaryElement*
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//'project' name=ID ':' BEGIN elements+=PrimaryElement* END
		public Group getGroup() { return cGroup; }
		
		//'project'
		public Keyword getProjectKeyword_0() { return cProjectKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//elements+=PrimaryElement*
		public Assignment getElementsAssignment_4() { return cElementsAssignment_4; }
		
		//PrimaryElement
		public RuleCall getElementsPrimaryElementParserRuleCall_4_0() { return cElementsPrimaryElementParserRuleCall_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5() { return cENDTerminalRuleCall_5; }
	}
	public class PrimaryElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.PrimaryElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDBConfigParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//PrimaryElement:
		//	DBConfig | Entity;
		@Override public ParserRule getRule() { return rule; }
		
		//DBConfig | Entity
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DBConfig
		public RuleCall getDBConfigParserRuleCall_0() { return cDBConfigParserRuleCall_0; }
		
		//Entity
		public RuleCall getEntityParserRuleCall_1() { return cEntityParserRuleCall_1; }
	}
	public class DBConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.DBConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDBConfigAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypeDatabaseKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cConfigAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cConfigDBDeclParserRuleCall_4_0 = (RuleCall)cConfigAssignment_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//DBConfig:
		//	{DBConfig} type='database' ':' BEGIN
		//	config+=DBDecl*
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//{DBConfig} type='database' ':' BEGIN config+=DBDecl* END
		public Group getGroup() { return cGroup; }
		
		//{DBConfig}
		public Action getDBConfigAction_0() { return cDBConfigAction_0; }
		
		//type='database'
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//'database'
		public Keyword getTypeDatabaseKeyword_1_0() { return cTypeDatabaseKeyword_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//config+=DBDecl*
		public Assignment getConfigAssignment_4() { return cConfigAssignment_4; }
		
		//DBDecl
		public RuleCall getConfigDBDeclParserRuleCall_4_0() { return cConfigDBDeclParserRuleCall_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5() { return cENDTerminalRuleCall_5; }
	}
	public class DBDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.DBDecl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cLibAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cTypeLibraryKeyword_0_1_0 = (Keyword)cTypeAssignment_0_1.eContents().get(0);
		private final Keyword cColonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cValueAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_0_3_0 = (RuleCall)cValueAssignment_0_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cHostAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cTypeHostnameKeyword_1_1_0 = (Keyword)cTypeAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cValueAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_3_0 = (RuleCall)cValueAssignment_1_3.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cPortAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Keyword cTypePortKeyword_2_1_0 = (Keyword)cTypeAssignment_2_1.eContents().get(0);
		private final Keyword cColonKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueINTTerminalRuleCall_2_3_0 = (RuleCall)cValueAssignment_2_3.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cDialectAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final Keyword cTypeDialectKeyword_3_1_0 = (Keyword)cTypeAssignment_3_1.eContents().get(0);
		private final Keyword cColonKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cValueAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_3_0 = (RuleCall)cValueAssignment_3_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cUserAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Keyword cTypeUsernameKeyword_4_1_0 = (Keyword)cTypeAssignment_4_1.eContents().get(0);
		private final Keyword cColonKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cValueAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_4_3_0 = (RuleCall)cValueAssignment_4_3.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cPassAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final Keyword cTypePasswordKeyword_5_1_0 = (Keyword)cTypeAssignment_5_1.eContents().get(0);
		private final Keyword cColonKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cValueAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_5_3_0 = (RuleCall)cValueAssignment_5_3.eContents().get(0);
		
		//DBDecl:
		//	{Lib} type='library' ':' value=STRING | {Host} type='hostname' ':' value=STRING | {Port} type='port' ':' value=INT |
		//	{Dialect} type='dialect' ':' value=STRING | {User} type='username' ':' value=STRING | {Pass} type='password' ':'
		//	value=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//{Lib} type='library' ':' value=STRING | {Host} type='hostname' ':' value=STRING | {Port} type='port' ':' value=INT |
		//{Dialect} type='dialect' ':' value=STRING | {User} type='username' ':' value=STRING | {Pass} type='password' ':'
		//value=STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{Lib} type='library' ':' value=STRING
		public Group getGroup_0() { return cGroup_0; }
		
		//{Lib}
		public Action getLibAction_0_0() { return cLibAction_0_0; }
		
		//type='library'
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }
		
		//'library'
		public Keyword getTypeLibraryKeyword_0_1_0() { return cTypeLibraryKeyword_0_1_0; }
		
		//':'
		public Keyword getColonKeyword_0_2() { return cColonKeyword_0_2; }
		
		//value=STRING
		public Assignment getValueAssignment_0_3() { return cValueAssignment_0_3; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0_3_0() { return cValueSTRINGTerminalRuleCall_0_3_0; }
		
		//{Host} type='hostname' ':' value=STRING
		public Group getGroup_1() { return cGroup_1; }
		
		//{Host}
		public Action getHostAction_1_0() { return cHostAction_1_0; }
		
		//type='hostname'
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }
		
		//'hostname'
		public Keyword getTypeHostnameKeyword_1_1_0() { return cTypeHostnameKeyword_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_1_2() { return cColonKeyword_1_2; }
		
		//value=STRING
		public Assignment getValueAssignment_1_3() { return cValueAssignment_1_3; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_3_0() { return cValueSTRINGTerminalRuleCall_1_3_0; }
		
		//{Port} type='port' ':' value=INT
		public Group getGroup_2() { return cGroup_2; }
		
		//{Port}
		public Action getPortAction_2_0() { return cPortAction_2_0; }
		
		//type='port'
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }
		
		//'port'
		public Keyword getTypePortKeyword_2_1_0() { return cTypePortKeyword_2_1_0; }
		
		//':'
		public Keyword getColonKeyword_2_2() { return cColonKeyword_2_2; }
		
		//value=INT
		public Assignment getValueAssignment_2_3() { return cValueAssignment_2_3; }
		
		//INT
		public RuleCall getValueINTTerminalRuleCall_2_3_0() { return cValueINTTerminalRuleCall_2_3_0; }
		
		//{Dialect} type='dialect' ':' value=STRING
		public Group getGroup_3() { return cGroup_3; }
		
		//{Dialect}
		public Action getDialectAction_3_0() { return cDialectAction_3_0; }
		
		//type='dialect'
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//'dialect'
		public Keyword getTypeDialectKeyword_3_1_0() { return cTypeDialectKeyword_3_1_0; }
		
		//':'
		public Keyword getColonKeyword_3_2() { return cColonKeyword_3_2; }
		
		//value=STRING
		public Assignment getValueAssignment_3_3() { return cValueAssignment_3_3; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_3_0() { return cValueSTRINGTerminalRuleCall_3_3_0; }
		
		//{User} type='username' ':' value=STRING
		public Group getGroup_4() { return cGroup_4; }
		
		//{User}
		public Action getUserAction_4_0() { return cUserAction_4_0; }
		
		//type='username'
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//'username'
		public Keyword getTypeUsernameKeyword_4_1_0() { return cTypeUsernameKeyword_4_1_0; }
		
		//':'
		public Keyword getColonKeyword_4_2() { return cColonKeyword_4_2; }
		
		//value=STRING
		public Assignment getValueAssignment_4_3() { return cValueAssignment_4_3; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_4_3_0() { return cValueSTRINGTerminalRuleCall_4_3_0; }
		
		//{Pass} type='password' ':' value=STRING
		public Group getGroup_5() { return cGroup_5; }
		
		//{Pass}
		public Action getPassAction_5_0() { return cPassAction_5_0; }
		
		//type='password'
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//'password'
		public Keyword getTypePasswordKeyword_5_1_0() { return cTypePasswordKeyword_5_1_0; }
		
		//':'
		public Keyword getColonKeyword_5_2() { return cColonKeyword_5_2; }
		
		//value=STRING
		public Assignment getValueAssignment_5_3() { return cValueAssignment_5_3; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_5_3_0() { return cValueSTRINGTerminalRuleCall_5_3_0; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntityAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEntityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cBEGINTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Assignment cModelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cModelEntityModelParserRuleCall_5_0 = (RuleCall)cModelAssignment_5.eContents().get(0);
		private final Assignment cServiceAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cServiceEntityServiceParserRuleCall_6_0 = (RuleCall)cServiceAssignment_6.eContents().get(0);
		private final Assignment cUiAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cUiEntityUIParserRuleCall_7_0 = (RuleCall)cUiAssignment_7.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//Entity:
		//	{Entity}
		//	'entity' name=ID ':' BEGIN
		//	model=EntityModel
		//	service=EntityService?
		//	ui=EntityUI?
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//{Entity} 'entity' name=ID ':' BEGIN model=EntityModel service=EntityService? ui=EntityUI? END
		public Group getGroup() { return cGroup; }
		
		//{Entity}
		public Action getEntityAction_0() { return cEntityAction_0; }
		
		//'entity'
		public Keyword getEntityKeyword_1() { return cEntityKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_4() { return cBEGINTerminalRuleCall_4; }
		
		//model=EntityModel
		public Assignment getModelAssignment_5() { return cModelAssignment_5; }
		
		//EntityModel
		public RuleCall getModelEntityModelParserRuleCall_5_0() { return cModelEntityModelParserRuleCall_5_0; }
		
		//service=EntityService?
		public Assignment getServiceAssignment_6() { return cServiceAssignment_6; }
		
		//EntityService
		public RuleCall getServiceEntityServiceParserRuleCall_6_0() { return cServiceEntityServiceParserRuleCall_6_0; }
		
		//ui=EntityUI?
		public Assignment getUiAssignment_7() { return cUiAssignment_7; }
		
		//EntityUI
		public RuleCall getUiEntityUIParserRuleCall_7_0() { return cUiEntityUIParserRuleCall_7_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_8() { return cENDTerminalRuleCall_8; }
	}
	public class EntityModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.EntityModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntityModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cFieldsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldsFieldParserRuleCall_1_0 = (RuleCall)cFieldsAssignment_1.eContents().get(0);
		
		//EntityModel:
		//	{EntityModel} fields+=Field*;
		@Override public ParserRule getRule() { return rule; }
		
		//{EntityModel} fields+=Field*
		public Group getGroup() { return cGroup; }
		
		//{EntityModel}
		public Action getEntityModelAction_0() { return cEntityModelAction_0; }
		
		//fields+=Field*
		public Assignment getFieldsAssignment_1() { return cFieldsAssignment_1; }
		
		//Field
		public RuleCall getFieldsFieldParserRuleCall_1_0() { return cFieldsFieldParserRuleCall_1_0; }
	}
	public class EntityServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.EntityService");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntityServiceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cServiceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//EntityService:
		//	{EntityService}
		//	'service' ':';
		@Override public ParserRule getRule() { return rule; }
		
		//{EntityService} 'service' ':'
		public Group getGroup() { return cGroup; }
		
		//{EntityService}
		public Action getEntityServiceAction_0() { return cEntityServiceAction_0; }
		
		//'service'
		public Keyword getServiceKeyword_1() { return cServiceKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
	}
	public class EntityUIElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.EntityUI");
		private final Keyword cUiKeyword = (Keyword)rule.eContents().get(1);
		
		//EntityUI:
		//	'ui';
		@Override public ParserRule getRule() { return rule; }
		
		//'ui'
		public Keyword getUiKeyword() { return cUiKeyword; }
	}
	public class FieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.Field");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeDataTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cPropertiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPropertiesFieldPropParserRuleCall_4_0 = (RuleCall)cPropertiesAssignment_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//Field:
		//	type=DataType name=ID ':' BEGIN
		//	properties+=FieldProp*
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//type=DataType name=ID ':' BEGIN properties+=FieldProp* END
		public Group getGroup() { return cGroup; }
		
		//type=DataType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//DataType
		public RuleCall getTypeDataTypeParserRuleCall_0_0() { return cTypeDataTypeParserRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//properties+=FieldProp*
		public Assignment getPropertiesAssignment_4() { return cPropertiesAssignment_4; }
		
		//FieldProp
		public RuleCall getPropertiesFieldPropParserRuleCall_4_0() { return cPropertiesFieldPropParserRuleCall_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5() { return cENDTerminalRuleCall_5; }
	}
	public class FieldPropElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.FieldProp");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cDefAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cTypeDefaultKeyword_0_1_0 = (Keyword)cTypeAssignment_0_1.eContents().get(0);
		private final Keyword cColonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cValueAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_0_3_0 = (RuleCall)cValueAssignment_0_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cPropTestAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cTypeTestKeyword_1_1_0 = (Keyword)cTypeAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cValueAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_3_0 = (RuleCall)cValueAssignment_1_3.eContents().get(0);
		
		//FieldProp:
		//	{Def} type='default' ':' value=STRING | {PropTest} type='test' ':' value=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//{Def} type='default' ':' value=STRING | {PropTest} type='test' ':' value=STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{Def} type='default' ':' value=STRING
		public Group getGroup_0() { return cGroup_0; }
		
		//{Def}
		public Action getDefAction_0_0() { return cDefAction_0_0; }
		
		//type='default'
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }
		
		//'default'
		public Keyword getTypeDefaultKeyword_0_1_0() { return cTypeDefaultKeyword_0_1_0; }
		
		//':'
		public Keyword getColonKeyword_0_2() { return cColonKeyword_0_2; }
		
		//value=STRING
		public Assignment getValueAssignment_0_3() { return cValueAssignment_0_3; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0_3_0() { return cValueSTRINGTerminalRuleCall_0_3_0; }
		
		//{PropTest} type='test' ':' value=STRING
		public Group getGroup_1() { return cGroup_1; }
		
		//{PropTest}
		public Action getPropTestAction_1_0() { return cPropTestAction_1_0; }
		
		//type='test'
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }
		
		//'test'
		public Keyword getTypeTestKeyword_1_1_0() { return cTypeTestKeyword_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_1_2() { return cColonKeyword_1_2; }
		
		//value=STRING
		public Assignment getValueAssignment_1_3() { return cValueAssignment_1_3; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_3_0() { return cValueSTRINGTerminalRuleCall_1_3_0; }
	}
	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.DataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cStrAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cTypeStringKeyword_0_1_0 = (Keyword)cTypeAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cDtAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cTypeDateKeyword_1_1_0 = (Keyword)cTypeAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cIntegAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Keyword cTypeIntKeyword_2_1_0 = (Keyword)cTypeAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cLngAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final Keyword cTypeLongKeyword_3_1_0 = (Keyword)cTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cBoolAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Keyword cTypeBoolKeyword_4_1_0 = (Keyword)cTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cFltAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final Keyword cTypeFloatKeyword_5_1_0 = (Keyword)cTypeAssignment_5_1.eContents().get(0);
		
		//DataType:
		//	{Str} type='string' | {Dt} type='date' | {Integ} type='int' | {Lng} type='long' | {Bool} type='bool' | {Flt}
		//	type='float';
		@Override public ParserRule getRule() { return rule; }
		
		//{Str} type='string' | {Dt} type='date' | {Integ} type='int' | {Lng} type='long' | {Bool} type='bool' | {Flt}
		//type='float'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{Str} type='string'
		public Group getGroup_0() { return cGroup_0; }
		
		//{Str}
		public Action getStrAction_0_0() { return cStrAction_0_0; }
		
		//type='string'
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }
		
		//'string'
		public Keyword getTypeStringKeyword_0_1_0() { return cTypeStringKeyword_0_1_0; }
		
		//{Dt} type='date'
		public Group getGroup_1() { return cGroup_1; }
		
		//{Dt}
		public Action getDtAction_1_0() { return cDtAction_1_0; }
		
		//type='date'
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }
		
		//'date'
		public Keyword getTypeDateKeyword_1_1_0() { return cTypeDateKeyword_1_1_0; }
		
		//{Integ} type='int'
		public Group getGroup_2() { return cGroup_2; }
		
		//{Integ}
		public Action getIntegAction_2_0() { return cIntegAction_2_0; }
		
		//type='int'
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }
		
		//'int'
		public Keyword getTypeIntKeyword_2_1_0() { return cTypeIntKeyword_2_1_0; }
		
		//{Lng} type='long'
		public Group getGroup_3() { return cGroup_3; }
		
		//{Lng}
		public Action getLngAction_3_0() { return cLngAction_3_0; }
		
		//type='long'
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//'long'
		public Keyword getTypeLongKeyword_3_1_0() { return cTypeLongKeyword_3_1_0; }
		
		//{Bool} type='bool'
		public Group getGroup_4() { return cGroup_4; }
		
		//{Bool}
		public Action getBoolAction_4_0() { return cBoolAction_4_0; }
		
		//type='bool'
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//'bool'
		public Keyword getTypeBoolKeyword_4_1_0() { return cTypeBoolKeyword_4_1_0; }
		
		//{Flt} type='float'
		public Group getGroup_5() { return cGroup_5; }
		
		//{Flt}
		public Action getFltAction_5_0() { return cFltAction_5_0; }
		
		//type='float'
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//'float'
		public Keyword getTypeFloatKeyword_5_1_0() { return cTypeFloatKeyword_5_1_0; }
	}
	
	
	private final ProjectElements pProject;
	private final PrimaryElementElements pPrimaryElement;
	private final DBConfigElements pDBConfig;
	private final DBDeclElements pDBDecl;
	private final EntityElements pEntity;
	private final EntityModelElements pEntityModel;
	private final EntityServiceElements pEntityService;
	private final EntityUIElements pEntityUI;
	private final FieldElements pField;
	private final FieldPropElements pFieldProp;
	private final DataTypeElements pDataType;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public CMSdslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProject = new ProjectElements();
		this.pPrimaryElement = new PrimaryElementElements();
		this.pDBConfig = new DBConfigElements();
		this.pDBDecl = new DBDeclElements();
		this.pEntity = new EntityElements();
		this.pEntityModel = new EntityModelElements();
		this.pEntityService = new EntityServiceElements();
		this.pEntityUI = new EntityUIElements();
		this.pField = new FieldElements();
		this.pFieldProp = new FieldPropElements();
		this.pDataType = new DataTypeElements();
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "jope015.mdsd2021.reexam.CMSdsl.END");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("jope015.mdsd2021.reexam.CMSdsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Project:
	//	'project' name=ID ':' BEGIN
	//	elements+=PrimaryElement*
	//	END;
	public ProjectElements getProjectAccess() {
		return pProject;
	}
	
	public ParserRule getProjectRule() {
		return getProjectAccess().getRule();
	}
	
	//PrimaryElement:
	//	DBConfig | Entity;
	public PrimaryElementElements getPrimaryElementAccess() {
		return pPrimaryElement;
	}
	
	public ParserRule getPrimaryElementRule() {
		return getPrimaryElementAccess().getRule();
	}
	
	//DBConfig:
	//	{DBConfig} type='database' ':' BEGIN
	//	config+=DBDecl*
	//	END;
	public DBConfigElements getDBConfigAccess() {
		return pDBConfig;
	}
	
	public ParserRule getDBConfigRule() {
		return getDBConfigAccess().getRule();
	}
	
	//DBDecl:
	//	{Lib} type='library' ':' value=STRING | {Host} type='hostname' ':' value=STRING | {Port} type='port' ':' value=INT |
	//	{Dialect} type='dialect' ':' value=STRING | {User} type='username' ':' value=STRING | {Pass} type='password' ':'
	//	value=STRING;
	public DBDeclElements getDBDeclAccess() {
		return pDBDecl;
	}
	
	public ParserRule getDBDeclRule() {
		return getDBDeclAccess().getRule();
	}
	
	//Entity:
	//	{Entity}
	//	'entity' name=ID ':' BEGIN
	//	model=EntityModel
	//	service=EntityService?
	//	ui=EntityUI?
	//	END;
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//EntityModel:
	//	{EntityModel} fields+=Field*;
	public EntityModelElements getEntityModelAccess() {
		return pEntityModel;
	}
	
	public ParserRule getEntityModelRule() {
		return getEntityModelAccess().getRule();
	}
	
	//EntityService:
	//	{EntityService}
	//	'service' ':';
	public EntityServiceElements getEntityServiceAccess() {
		return pEntityService;
	}
	
	public ParserRule getEntityServiceRule() {
		return getEntityServiceAccess().getRule();
	}
	
	//EntityUI:
	//	'ui';
	public EntityUIElements getEntityUIAccess() {
		return pEntityUI;
	}
	
	public ParserRule getEntityUIRule() {
		return getEntityUIAccess().getRule();
	}
	
	//Field:
	//	type=DataType name=ID ':' BEGIN
	//	properties+=FieldProp*
	//	END;
	public FieldElements getFieldAccess() {
		return pField;
	}
	
	public ParserRule getFieldRule() {
		return getFieldAccess().getRule();
	}
	
	//FieldProp:
	//	{Def} type='default' ':' value=STRING | {PropTest} type='test' ':' value=STRING;
	public FieldPropElements getFieldPropAccess() {
		return pFieldProp;
	}
	
	public ParserRule getFieldPropRule() {
		return getFieldPropAccess().getRule();
	}
	
	//DataType:
	//	{Str} type='string' | {Dt} type='date' | {Integ} type='int' | {Lng} type='long' | {Bool} type='bool' | {Flt}
	//	type='float';
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//terminal BEGIN:
	//	'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//terminal END:
	//	'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
