grammar jope015.mdsd2021.reexam.CMSdsl with org.eclipse.xtext.common.Terminals

generate cMSdsl "http://www.mdsd2021.jope015/reexam/CMSdsl"


Project:
	'project' name=ID ':' BEGIN
		elements+=PrimaryElement*
	END
;

PrimaryElement:
	DBConfig | Entity | Validator 
;

DBConfig:
	{DBConfig} 
	type='database' ':' BEGIN
		config+=DBDecl*
	END
;


DBDecl:
	{Lib} type='library' ':' value=STRING |
	{Host} type='hostname' ':' value=STRING |
	{Port} type='port' ':' value=INT |
	{Dialect} type='dialect' ':' value=STRING |
	{User} type='username' ':' value=STRING |
	{Pass} type='password' ':' value=STRING
;

Entity:
	{Entity}
	'entity' name=ID (relations+=Relationship ('and' relations+=Relationship)*)? ':' BEGIN
		members+=EntityDecl*
	END
;

EntityDecl:
	Field | ValidationCheck
;



Field:
	(dontShow?='hide')? 'field' name=ID ':' type=DataType  ('=>' BEGIN
		properties+=FieldProp*
	END)?
;


ValidationCheck:
	'check' (locations+=ValidationCheckLocation ('and' locations+=ValidationCheckLocation)? )?  validator=ValidatorUse '=>' errrorMsg=STRING 
;

ValidationCheckLocation:
	location='client' | location='server'
;

ValidatorUse:
	{ValidatorUse} validator=[Validator]  '(' args+=[Field] (',' args+=[Field])* ')'
;


FieldProp:
	{Def} type='default' ':' value=Atomic |
	{PropTest} type='test' ':' value=STRING |
	{InputField} type='inputType' ':' value=InputType |
	{DisplayAs} type='displayAs' ':' value=STRING |
	{Nullable} type='nullable' ':' value=BOOLEAN |
	{Unique} type='unique' ':' value=BOOLEAN
	
;


InputType:
	{InpMail} type='email' |
	{InpDate} type='date' |
	{InpNum} type='number' |
	{InpPass} type='password' |
	{InpText} type='text' |
	{InpTextArea} type='textarea'
;


DataType:
    {Str} type='string' | 
    {Dt} type='date'| 
    {Integ} type='int' | 
    {Lng} type='long' | 
    {Bool} type='bool' | 
    {Flt} type='float'
;

Validator:
	'validator' name=ID '(' params+=Parameter (',' params+=Parameter)* ')' '=>' BEGIN
		comparison=Expression
	END 
;

Parameter:
	name=ID ':' type=DataType
;

ParamOrArg:
	Parameter | Field
;

ParamOrArgUse:
	ref=[ParamOrArg]
;


Relationship:
	relationType=RelationshipType entity=[Entity]
;

RelationshipType:
	{BelongsTo}		'belongs' 'to' |
	{BelongsToMany}	'belongs' 'to' 'many' |
	{HasOne}		'has' 'one' |
	{HasMany}		'has' 'many'
;
//	Expressions

Expression:
	Or
;


Or returns Expression:
	And ({Or.left=current} '||' right=And)*
;

And returns Expression:
	Equality ({And.left=current} '&&' right=Equality)*
;

Equality returns Expression:
	Comparison ({Equality.left=current} op=( '==' | '!=') right=Comparison)*
;

Comparison returns Expression:
	PlusMinus ({Comparison.left=current} op=('>=' | '<=' | '>' | '<') right=PlusMinus)*
;

PlusMinus returns Expression:
	MulDiv (({Plus.left=current} '+' | {Minus.left=current} '-') right=MulDiv)*
;

MulDiv returns Expression:
	Primary (({Mul.left=current} '*' | {Div.left=current} '/') right=Primary)*
;


Primary returns Expression:
	'(' Expression ')' |
	Atomic
;

Atomic returns Expression:
	{Num} value=INT |
	{Str} value=STRING |
	{Bool} value=BOOLEAN |
	ParamOrArgUse
;

terminal BOOLEAN: 'true' | 'false';
terminal BEGIN: 'synthetic:BEGIN';
terminal END: 'synthetic:END';